// <auto-generated />
using System;
using App.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace App.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220910040452_InitOldTables")]
    partial class InitOldTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("App.Domain.Entities.Features.AspnetApplication", b =>
                {
                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("ApplicationId");

                    b.Property<string>("ApplicationName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("ApplicationName");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Description");

                    b.Property<string>("LoweredApplicationName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("LoweredApplicationName");

                    b.ToTable("aspnet_Applications", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.AspnetMembership", b =>
                {
                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("ApplicationId");

                    b.Property<string>("Comment")
                        .HasColumnType("ntext")
                        .HasComment("Comment");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime")
                        .HasComment("CreateDate");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Email");

                    b.Property<int>("FailedPasswordAnswerAttemptCount")
                        .HasColumnType("int")
                        .HasComment("FailedPasswordAnswerAttemptCount");

                    b.Property<DateTime>("FailedPasswordAnswerAttemptWindowStart")
                        .HasColumnType("datetime")
                        .HasComment("FailedPasswordAnswerAttemptWindowStart");

                    b.Property<int>("FailedPasswordAttemptCount")
                        .HasColumnType("int")
                        .HasComment("FailedPasswordAttemptCount");

                    b.Property<DateTime>("FailedPasswordAttemptWindowStart")
                        .HasColumnType("datetime")
                        .HasComment("FailedPasswordAttemptWindowStart");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit")
                        .HasComment("IsApproved");

                    b.Property<bool>("IsLockedOut")
                        .HasColumnType("bit")
                        .HasComment("IsLockedOut");

                    b.Property<DateTime>("LastLockoutDate")
                        .HasColumnType("datetime")
                        .HasComment("LastLockoutDate");

                    b.Property<DateTime>("LastLoginDate")
                        .HasColumnType("datetime")
                        .HasComment("LastLoginDate");

                    b.Property<DateTime>("LastPasswordChangedDate")
                        .HasColumnType("datetime")
                        .HasComment("LastPasswordChangedDate");

                    b.Property<string>("LoweredEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("LoweredEmail");

                    b.Property<string>("MobilePin")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("MobilePIN")
                        .HasComment("MobilePin");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasComment("Password");

                    b.Property<string>("PasswordAnswer")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasComment("PasswordAnswer");

                    b.Property<int>("PasswordFormat")
                        .HasColumnType("int")
                        .HasComment("PasswordFormat");

                    b.Property<string>("PasswordQuestion")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("PasswordQuestion");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasComment("PasswordSalt");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("UserId");

                    b.ToTable("aspnet_Membership", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.AspnetPath", b =>
                {
                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("ApplicationId");

                    b.Property<string>("LoweredPath")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("LoweredPath");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Path");

                    b.Property<Guid>("PathId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("PathId");

                    b.ToTable("aspnet_Paths", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.AspnetPersonalizationAllUser", b =>
                {
                    b.Property<Guid>("PathId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("PathId");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime")
                        .HasComment("LastUpdatedDate");

                    b.Property<byte[]>("PageSettings")
                        .IsRequired()
                        .HasColumnType("image")
                        .HasComment("PageSettings");

                    b.HasKey("PathId")
                        .HasName("PK__aspnet_P__CD67DC596EC0713C");

                    b.ToTable("aspnet_PersonalizationAllUsers", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.AspnetPersonalizationPerUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()")
                        .HasComment("Id");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime")
                        .HasComment("LastUpdatedDate");

                    b.Property<byte[]>("PageSettings")
                        .IsRequired()
                        .HasColumnType("image")
                        .HasComment("PageSettings");

                    b.Property<Guid?>("PathId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("PathId");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("UserId");

                    b.ToTable("aspnet_PersonalizationPerUser", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.AspnetProfile", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("UserId");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime")
                        .HasComment("LastUpdatedDate");

                    b.Property<string>("PropertyNames")
                        .IsRequired()
                        .HasColumnType("ntext")
                        .HasComment("PropertyNames");

                    b.Property<byte[]>("PropertyValuesBinary")
                        .IsRequired()
                        .HasColumnType("image")
                        .HasComment("PropertyValuesBinary");

                    b.Property<string>("PropertyValuesString")
                        .IsRequired()
                        .HasColumnType("ntext")
                        .HasComment("PropertyValuesString");

                    b.HasKey("UserId")
                        .HasName("PK__aspnet_P__1788CC4C44CA3770");

                    b.ToTable("aspnet_Profile", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.AspnetRole", b =>
                {
                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("ApplicationId");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Description");

                    b.Property<string>("LoweredRoleName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("LoweredRoleName");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("RoleId");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("RoleName");

                    b.ToTable("aspnet_Roles", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.AspnetSchemaVersion", b =>
                {
                    b.Property<string>("Feature")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasComment("Feature");

                    b.Property<string>("CompatibleSchemaVersion")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasComment("CompatibleSchemaVersion");

                    b.Property<bool>("IsCurrentVersion")
                        .HasColumnType("bit")
                        .HasComment("IsCurrentVersion");

                    b.HasKey("Feature", "CompatibleSchemaVersion")
                        .HasName("PK__aspnet_S__5A1E6BC12180FB33");

                    b.ToTable("aspnet_SchemaVersions", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.AspnetUser", b =>
                {
                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("ApplicationId");

                    b.Property<bool>("IsAnonymous")
                        .HasColumnType("bit")
                        .HasComment("IsAnonymous");

                    b.Property<DateTime>("LastActivityDate")
                        .HasColumnType("datetime")
                        .HasComment("LastActivityDate");

                    b.Property<string>("LoweredUserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("LoweredUserName");

                    b.Property<string>("MobileAlias")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasComment("MobileAlias");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("UserId");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("UserName");

                    b.ToTable("aspnet_Users", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.AspnetUsersInRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("UserId");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("RoleId");

                    b.HasKey("UserId", "RoleId")
                        .HasName("PK__aspnet_U__AF2760AD55F4C372");

                    b.ToTable("aspnet_UsersInRoles", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.AspnetWebEventEvent", b =>
                {
                    b.Property<string>("EventId")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("char(32)")
                        .IsFixedLength()
                        .HasComment("EventId");

                    b.Property<string>("ApplicationPath")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("ApplicationPath");

                    b.Property<string>("ApplicationVirtualPath")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("ApplicationVirtualPath");

                    b.Property<string>("Details")
                        .HasColumnType("ntext")
                        .HasComment("Details");

                    b.Property<int>("EventCode")
                        .HasColumnType("int")
                        .HasComment("EventCode");

                    b.Property<int>("EventDetailCode")
                        .HasColumnType("int")
                        .HasComment("EventDetailCode");

                    b.Property<decimal>("EventOccurrence")
                        .HasColumnType("decimal(19,0)")
                        .HasComment("EventOccurrence");

                    b.Property<decimal>("EventSequence")
                        .HasColumnType("decimal(19,0)")
                        .HasComment("EventSequence");

                    b.Property<DateTime>("EventTime")
                        .HasColumnType("datetime")
                        .HasComment("EventTime");

                    b.Property<DateTime>("EventTimeUtc")
                        .HasColumnType("datetime")
                        .HasComment("EventTimeUtc");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("EventType");

                    b.Property<string>("ExceptionType")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("ExceptionType");

                    b.Property<string>("MachineName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("MachineName");

                    b.Property<string>("Message")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasComment("Message");

                    b.Property<string>("RequestUrl")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasComment("RequestUrl");

                    b.HasKey("EventId")
                        .HasName("PK__aspnet_W__7944C810078C1F06");

                    b.ToTable("aspnet_WebEvent_Events", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ErrCancel", b =>
                {
                    b.Property<string>("Idn")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("Idn");

                    b.HasKey("Idn");

                    b.ToTable("ErrCancel", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Comment");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime")
                        .HasComment("DateCreate");

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("datetime")
                        .HasComment("DateEnd");

                    b.Property<DateTime>("DateSignUpDue")
                        .HasColumnType("datetime")
                        .HasComment("DateSignUpDue");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime")
                        .HasComment("DateStart");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime")
                        .HasComment("DateUpdate");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Description");

                    b.Property<string>("FilePath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("FilePath");

                    b.Property<bool>("IsDinner")
                        .HasColumnType("bit")
                        .HasComment("IsDinner");

                    b.Property<bool>("IsLunch")
                        .HasColumnType("bit")
                        .HasComment("IsLunch");

                    b.Property<bool>("IsNeedRecruit")
                        .HasColumnType("bit")
                        .HasComment("IsNeedRecruit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Name");

                    b.Property<int>("OrgId")
                        .HasColumnType("int")
                        .HasComment("OrgId");

                    b.Property<Guid>("PortalId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("PortalId");

                    b.Property<string>("StatusCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("StatusCd");

                    b.Property<string>("TargetRole")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("TargetRole");

                    b.Property<string>("UserCreate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserCreate");

                    b.Property<string>("UserUpdate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserUpdate");

                    b.HasKey("Id");

                    b.ToTable("MOD_ACTIVITY", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModActivityWork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ActivityId")
                        .HasColumnType("int")
                        .HasComment("ActivityId");

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Comment");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasComment("Date");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime")
                        .HasComment("DateCreate");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime")
                        .HasComment("DateUpdate");

                    b.Property<int>("FemaleWanted")
                        .HasColumnType("int")
                        .HasComment("FemaleWanted");

                    b.Property<bool>("IsNeedRecruit")
                        .HasColumnType("bit")
                        .HasComment("IsNeedRecruit");

                    b.Property<bool>("IsTeam")
                        .HasColumnType("bit")
                        .HasComment("IsTeam");

                    b.Property<int>("MaleWanted")
                        .HasColumnType("int")
                        .HasComment("MaleWanted");

                    b.Property<string>("MinisterRequired")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("MinisterRequired");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Name");

                    b.Property<string>("StatusCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("StatusCd");

                    b.Property<int?>("TargetMinisterId")
                        .HasColumnType("int")
                        .HasComment("TargetMinisterId");

                    b.Property<string>("TargetRole")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("TargetRole");

                    b.Property<string>("TimeEnd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("TimeEnd");

                    b.Property<string>("TimeStart")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("TimeStart");

                    b.Property<string>("UserCreate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserCreate");

                    b.Property<string>("UserUpdate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserUpdate");

                    b.HasKey("Id");

                    b.ToTable("MOD_ACTIVITY_WORK", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModActivityWorkShare", b =>
                {
                    b.Property<int>("WorkId")
                        .HasColumnType("int")
                        .HasComment("WorkId");

                    b.Property<int>("AreaId")
                        .HasColumnType("int")
                        .HasComment("AreaId");

                    b.Property<string>("AreaName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("AreaName");

                    b.Property<int>("FemaleWanted")
                        .HasColumnType("int")
                        .HasComment("FemaleWanted");

                    b.Property<int>("MaleWanted")
                        .HasColumnType("int")
                        .HasComment("MaleWanted");

                    b.HasKey("WorkId", "AreaId")
                        .HasName("PK_MOD_ACTIVITY_WORK_SHARE_1");

                    b.ToTable("MOD_ACTIVITY_WORK_SHARE", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModActivityWorkSignup", b =>
                {
                    b.Property<int>("WorkId")
                        .HasColumnType("int")
                        .HasComment("WorkId");

                    b.Property<int>("AreaId")
                        .HasColumnType("int")
                        .HasComment("AreaId");

                    b.Property<int>("GroupId")
                        .HasColumnType("int")
                        .HasComment("GroupId");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasComment("MemberId");

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Comment");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength()
                        .HasComment("Gender");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("GroupName");

                    b.Property<string>("MemberName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("MemberName");

                    b.Property<int?>("RealTeamNo")
                        .HasColumnType("int")
                        .HasComment("RealTeamNo");

                    b.Property<int?>("TeamNo")
                        .HasColumnType("int")
                        .HasComment("TeamNo");

                    b.HasKey("WorkId", "AreaId", "GroupId", "MemberId");

                    b.ToTable("MOD_ACTIVITY_WORK_SIGNUP", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("Code");

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Comment");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime")
                        .HasComment("DateCreate");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime")
                        .HasComment("DateUpdate");

                    b.Property<int?>("DepId")
                        .HasColumnType("int")
                        .HasComment("DepId");

                    b.Property<int?>("Leader2Id")
                        .HasColumnType("int")
                        .HasComment("Leader2Id");

                    b.Property<string>("Leader2Idnumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Leader2IDNumber")
                        .HasComment("Leader2Idnumber");

                    b.Property<int?>("Leader3Id")
                        .HasColumnType("int")
                        .HasComment("Leader3Id");

                    b.Property<string>("Leader3Idnumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Leader3IDNumber")
                        .HasComment("Leader3Idnumber");

                    b.Property<int?>("LeaderId")
                        .HasColumnType("int")
                        .HasComment("LeaderId");

                    b.Property<string>("LeaderIdnumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("LeaderIDNumber")
                        .HasComment("LeaderIdnumber");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Name");

                    b.Property<int?>("Oid")
                        .HasColumnType("int")
                        .HasColumnName("OId")
                        .HasComment("Oid");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasComment("OrgId");

                    b.Property<string>("StatusCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("StatusCd");

                    b.Property<string>("UserCreate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserCreate");

                    b.Property<string>("UserUpdate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserUpdate");

                    b.HasKey("Id");

                    b.ToTable("MOD_AREA", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModArealeader", b =>
                {
                    b.Property<int>("AreaId")
                        .HasColumnType("int")
                        .HasComment("AreaId");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasComment("MemberId");

                    b.HasKey("AreaId", "MemberId");

                    b.ToTable("MOD_AREALEADER", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModAreasupervisor", b =>
                {
                    b.Property<int>("AreaId")
                        .HasColumnType("int")
                        .HasComment("AreaId");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasComment("MemberId");

                    b.HasKey("AreaId", "MemberId");

                    b.ToTable("MOD_AREASUPERVISOR", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModCampaign", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()")
                        .HasComment("Id");

                    b.Property<string>("CategoryCd")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("CategoryCd");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Comment");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime")
                        .HasComment("DateCreate");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("datetime")
                        .HasComment("DateEnd");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime")
                        .HasComment("DateStart");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime")
                        .HasComment("DateUpdate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Name");

                    b.Property<int>("No")
                        .HasColumnType("int")
                        .HasComment("No");

                    b.Property<string>("StatusCd")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("StatusCd");

                    b.Property<string>("UserCreate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserCreate");

                    b.Property<string>("UserUpdate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserUpdate");

                    b.HasKey("Id");

                    b.ToTable("MOD_CAMPAIGN", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModCampaignMember", b =>
                {
                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasComment("MemberId");

                    b.Property<Guid>("CampaignId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("CampaignId");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Comment");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime")
                        .HasComment("DateCreate");

                    b.Property<bool>("IsRollCall")
                        .HasColumnType("bit")
                        .HasComment("IsRollCall");

                    b.Property<string>("StatusCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("StatusCd");

                    b.HasKey("MemberId", "CampaignId");

                    b.ToTable("MOD_CAMPAIGN_MEMBER", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModCampaignSpday", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid?>("CampaignId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("CampaignId");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasComment("Date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Name");

                    b.HasKey("Id");

                    b.ToTable("MOD_CAMPAIGN_SPDAY", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModCareer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Career")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Career");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Description");

                    b.HasKey("Id");

                    b.ToTable("MOD_CAREER", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Capacity")
                        .HasColumnType("int")
                        .HasComment("Capacity");

                    b.Property<string>("CategoryCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("CategoryCode");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasComment("CategoryId");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("CategoryName");

                    b.Property<DateTime>("ClassStartDate")
                        .HasColumnType("datetime")
                        .HasComment("ClassStartDate");

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Comment");

                    b.Property<string>("ContactFax")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("ContactFax");

                    b.Property<string>("ContactName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("ContactName");

                    b.Property<string>("ContactPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("ContactPhone");

                    b.Property<decimal>("Credit")
                        .HasColumnType("decimal(4,1)")
                        .HasComment("Credit");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime")
                        .HasComment("DateCreate");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime")
                        .HasComment("DateUpdate");

                    b.Property<DateTime?>("DiscountDueDate")
                        .HasColumnType("datetime")
                        .HasComment("DiscountDueDate");

                    b.Property<int>("Frequency")
                        .HasColumnType("int")
                        .HasComment("Frequency");

                    b.Property<bool>("IsAllowNewCommer")
                        .HasColumnType("bit")
                        .HasComment("IsAllowNewCommer");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit")
                        .HasComment("IsPublic");

                    b.Property<bool>("IsRequireAllowLession")
                        .HasColumnType("bit")
                        .HasComment("IsRequireAllowLession");

                    b.Property<string>("LessionCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("LessionCode");

                    b.Property<int>("LessionId")
                        .HasColumnType("int")
                        .HasComment("LessionId");

                    b.Property<string>("LessionName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("LessionName");

                    b.Property<int>("LessionNo")
                        .HasColumnType("int")
                        .HasComment("LessionNo");

                    b.Property<int>("LineCapacity")
                        .HasColumnType("int")
                        .HasComment("LineCapacity");

                    b.Property<int>("MinTimeSelect")
                        .HasColumnType("int")
                        .HasComment("MinTimeSelect");

                    b.Property<int>("OrgId")
                        .HasColumnType("int")
                        .HasComment("OrgId");

                    b.Property<Guid>("PortalId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("PortalId");

                    b.Property<string>("Properties")
                        .HasColumnType("ntext")
                        .HasComment("Properties");

                    b.Property<string>("Requeryments")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Requeryments");

                    b.Property<string>("Settings1")
                        .HasColumnType("ntext")
                        .HasComment("Settings1");

                    b.Property<string>("Settings2")
                        .HasColumnType("ntext")
                        .HasComment("Settings2");

                    b.Property<DateTime>("SignUpDueDate")
                        .HasColumnType("datetime")
                        .HasComment("SignUpDueDate");

                    b.Property<string>("StatusCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("StatusCd");

                    b.Property<string>("UserCreate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserCreate");

                    b.Property<string>("UserUpdate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserUpdate");

                    b.HasKey("Id");

                    b.ToTable("MOD_CLASS", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModClassDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ClassDate")
                        .HasColumnType("datetime")
                        .HasComment("ClassDate");

                    b.Property<int>("ClassTimeId")
                        .HasColumnType("int")
                        .HasComment("ClassTimeId");

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Comment");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime")
                        .HasComment("DateCreate");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime")
                        .HasComment("DateUpdate");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime")
                        .HasComment("EndTime");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime")
                        .HasComment("StartTime");

                    b.Property<string>("StatusCd")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("StatusCd");

                    b.Property<string>("UserCreate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserCreate");

                    b.Property<string>("UserUpdate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserUpdate");

                    b.HasKey("Id");

                    b.ToTable("MOD_CLASS_DAY", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModClassPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClassId")
                        .HasColumnType("int")
                        .HasComment("ClassId");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime")
                        .HasComment("DueDate");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit")
                        .HasComment("IsPublic");

                    b.Property<decimal>("Price")
                        .HasColumnType("money")
                        .HasComment("Price");

                    b.Property<string>("PriceName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("PriceName");

                    b.HasKey("Id");

                    b.ToTable("MOD_CLASS_PRICE", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModClassTerm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClassId")
                        .HasColumnType("int")
                        .HasComment("ClassId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Name");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int")
                        .HasComment("SortOrder");

                    b.HasKey("Id");

                    b.ToTable("MOD_CLASS_TERM", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModClassTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Capacity")
                        .HasColumnType("int")
                        .HasComment("Capacity");

                    b.Property<string>("ClassCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasComment("ClassCode");

                    b.Property<int>("ClassId")
                        .HasColumnType("int")
                        .HasComment("ClassId");

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Comment");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime")
                        .HasComment("DateCreate");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime")
                        .HasComment("DateUpdate");

                    b.Property<int>("DayofWeek")
                        .HasColumnType("int")
                        .HasComment("DayofWeek");

                    b.Property<DateTime?>("DiscountDueDate")
                        .HasColumnType("datetime")
                        .HasComment("DiscountDueDate");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime")
                        .HasComment("EndTime");

                    b.Property<int>("LessionTimeId")
                        .HasColumnType("int")
                        .HasComment("LessionTimeId");

                    b.Property<string>("Place")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Place");

                    b.Property<DateTime?>("SignUpDueDate")
                        .HasColumnType("datetime")
                        .HasComment("SignUpDueDate");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime")
                        .HasComment("StartTime");

                    b.Property<string>("StatusCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("StatusCd");

                    b.Property<string>("TeacherName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("TeacherName");

                    b.Property<string>("UserCreate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserCreate");

                    b.Property<string>("UserUpdate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserUpdate");

                    b.HasKey("Id");

                    b.ToTable("MOD_CLASS_TIME", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModDepartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Comment");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime")
                        .HasComment("DateCreate");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime")
                        .HasComment("DateUpdate");

                    b.Property<int?>("Leader2Id")
                        .HasColumnType("int")
                        .HasComment("Leader2Id");

                    b.Property<string>("Leader2Idnumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Leader2IDNumber")
                        .HasComment("Leader2Idnumber");

                    b.Property<int?>("LeaderId")
                        .HasColumnType("int")
                        .HasComment("LeaderId");

                    b.Property<string>("LeaderIdnumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("LeaderIDNumber")
                        .HasComment("LeaderIdnumber");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Name");

                    b.Property<int?>("Oid")
                        .HasColumnType("int")
                        .HasColumnName("OId")
                        .HasComment("Oid");

                    b.Property<int>("OrgId")
                        .HasColumnType("int")
                        .HasComment("OrgId");

                    b.Property<string>("StatusCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("StatusCd");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int")
                        .HasComment("TypeId");

                    b.Property<string>("UserCreate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserCreate");

                    b.Property<string>("UserUpdate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserUpdate");

                    b.HasKey("Id");

                    b.ToTable("MOD_DEPARTMENT", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModExpgroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AreaName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("AreaName");

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Comment");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime")
                        .HasComment("DateCreate");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("datetime")
                        .HasComment("DateEnd");

                    b.Property<DateTime?>("DateStart")
                        .HasColumnType("datetime")
                        .HasComment("DateStart");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime")
                        .HasComment("DateUpdate");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int")
                        .HasComment("GroupId");

                    b.Property<int?>("Leader2Id")
                        .HasColumnType("int")
                        .HasComment("Leader2Id");

                    b.Property<string>("Leader2Idnumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Leader2IDNumber")
                        .HasComment("Leader2Idnumber");

                    b.Property<int?>("Leader3Id")
                        .HasColumnType("int")
                        .HasComment("Leader3Id");

                    b.Property<string>("Leader3Idnumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Leader3IDNumber")
                        .HasComment("Leader3Idnumber");

                    b.Property<int?>("LeaderId")
                        .HasColumnType("int")
                        .HasComment("LeaderId");

                    b.Property<string>("LeaderIdnumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("LeaderIDNumber")
                        .HasComment("LeaderIdnumber");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Name");

                    b.Property<int>("NewMemCount")
                        .HasColumnType("int")
                        .HasComment("NewMemCount");

                    b.Property<int>("NewMemE1count")
                        .HasColumnType("int")
                        .HasColumnName("NewMemE1Count")
                        .HasComment("NewMemE1count");

                    b.Property<int>("NewMemStayCount")
                        .HasColumnType("int")
                        .HasComment("NewMemStayCount");

                    b.Property<int>("No")
                        .HasColumnType("int")
                        .HasComment("No");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasComment("OrgId");

                    b.Property<string>("StatusCd")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("StatusCd");

                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasComment("TypeId");

                    b.Property<string>("UserCreate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserCreate");

                    b.Property<string>("UserUpdate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserUpdate");

                    b.HasKey("Id");

                    b.ToTable("MOD_EXPGROUP", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasComment("AreaId");

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Comment");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime")
                        .HasComment("DateCreate");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime")
                        .HasComment("DateUpdate");

                    b.Property<int?>("DepId")
                        .HasColumnType("int")
                        .HasComment("DepId");

                    b.Property<bool>("IsExp")
                        .HasColumnType("bit")
                        .HasComment("IsExp");

                    b.Property<bool>("IsSearchable")
                        .HasColumnType("bit")
                        .HasComment("IsSearchable");

                    b.Property<int?>("Leader2Id")
                        .HasColumnType("int")
                        .HasComment("Leader2Id");

                    b.Property<string>("Leader2Idnumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Leader2IDNumber")
                        .HasComment("Leader2Idnumber");

                    b.Property<int?>("Leader3Id")
                        .HasColumnType("int")
                        .HasComment("Leader3Id");

                    b.Property<string>("Leader3Idnumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Leader3IDNumber")
                        .HasComment("Leader3Idnumber");

                    b.Property<int?>("LeaderId")
                        .HasColumnType("int")
                        .HasComment("LeaderId");

                    b.Property<string>("LeaderIdnumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("LeaderIDNumber")
                        .HasComment("LeaderIdnumber");

                    b.Property<string>("MeetingAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("MeetingAddress");

                    b.Property<int>("MeetingDayOfWeek")
                        .HasColumnType("int")
                        .HasComment("MeetingDayOfWeek");

                    b.Property<string>("MeetingTime")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("MeetingTime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Name");

                    b.Property<int?>("Oid")
                        .HasColumnType("int")
                        .HasColumnName("OId")
                        .HasComment("Oid");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasComment("OrgId");

                    b.Property<string>("StatusCd")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("StatusCd");

                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasComment("TypeId");

                    b.Property<string>("UserCreate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserCreate");

                    b.Property<string>("UserUpdate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserUpdate");

                    b.Property<int>("ZoneId")
                        .HasColumnType("int")
                        .HasComment("ZoneId");

                    b.HasKey("Id");

                    b.ToTable("MOD_GROUP", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModGroupleader", b =>
                {
                    b.Property<int>("GroupId")
                        .HasColumnType("int")
                        .HasComment("GroupId");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasComment("MemberId");

                    b.HasKey("GroupId", "MemberId");

                    b.ToTable("MOD_GROUPLEADER", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModLession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BaseNo")
                        .HasColumnType("int")
                        .HasComment("BaseNo");

                    b.Property<int>("BaseNoGranted")
                        .HasColumnType("int")
                        .HasComment("BaseNoGranted");

                    b.Property<int>("Capacity")
                        .HasColumnType("int")
                        .HasComment("Capacity");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasComment("CategoryId");

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Comment");

                    b.Property<string>("ContactFax")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("ContactFax");

                    b.Property<string>("ContactName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("ContactName");

                    b.Property<string>("ContactPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("ContactPhone");

                    b.Property<decimal>("Credit")
                        .HasColumnType("decimal(4,1)")
                        .HasComment("Credit");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime")
                        .HasComment("DateCreate");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime")
                        .HasComment("DateUpdate");

                    b.Property<int>("Frequency")
                        .HasColumnType("int")
                        .HasComment("Frequency");

                    b.Property<bool>("IsAllowNewCommer")
                        .HasColumnType("bit")
                        .HasComment("IsAllowNewCommer");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit")
                        .HasComment("IsPublic");

                    b.Property<bool>("IsRequireAllowLession")
                        .HasColumnType("bit")
                        .HasComment("IsRequireAllowLession");

                    b.Property<string>("LessionCode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("LessionCode");

                    b.Property<string>("LessionName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("LessionName");

                    b.Property<int>("MinTimeSelect")
                        .HasColumnType("int")
                        .HasComment("MinTimeSelect");

                    b.Property<int>("OrgId")
                        .HasColumnType("int")
                        .HasComment("OrgId");

                    b.Property<Guid>("PortalId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("PortalId");

                    b.Property<string>("Properties")
                        .HasColumnType("ntext")
                        .HasComment("Properties");

                    b.Property<string>("Requeryments")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Requeryments");

                    b.Property<string>("Settings1")
                        .HasColumnType("ntext")
                        .HasComment("Settings1");

                    b.Property<string>("Settings2")
                        .HasColumnType("ntext")
                        .HasComment("Settings2");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int")
                        .HasComment("SortOrder");

                    b.Property<string>("StatusCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("StatusCd");

                    b.Property<string>("UserCreate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserCreate");

                    b.Property<string>("UserUpdate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserUpdate");

                    b.HasKey("Id");

                    b.ToTable("MOD_LESSION", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModLessionCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CategoryCode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("CategoryCode");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("CategoryName");

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Comment");

                    b.Property<bool>("IsBase")
                        .HasColumnType("bit")
                        .HasComment("IsBase");

                    b.Property<bool>("IsFeatured")
                        .HasColumnType("bit")
                        .HasComment("IsFeatured");

                    b.Property<bool>("IsSeminary")
                        .HasColumnType("bit")
                        .HasComment("IsSeminary");

                    b.Property<Guid>("PortalId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("PortalId");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int")
                        .HasComment("SortOrder");

                    b.Property<string>("StatusCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("StatusCd");

                    b.HasKey("Id");

                    b.ToTable("MOD_LESSION_CATEGORY", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModLessionPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DaysBeforeDue")
                        .HasColumnType("int")
                        .HasComment("DaysBeforeDue");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit")
                        .HasComment("IsPublic");

                    b.Property<int>("LessionId")
                        .HasColumnType("int")
                        .HasComment("LessionId");

                    b.Property<decimal>("Price")
                        .HasColumnType("money")
                        .HasComment("Price");

                    b.Property<string>("PriceName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("PriceName");

                    b.HasKey("Id");

                    b.ToTable("MOD_LESSION_PRICE", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModLessionTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClassCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasComment("ClassCode");

                    b.Property<int>("DayofWeek")
                        .HasColumnType("int")
                        .HasComment("DayofWeek");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime")
                        .HasComment("EndTime");

                    b.Property<int>("LessionId")
                        .HasColumnType("int")
                        .HasComment("LessionId");

                    b.Property<string>("Place")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Place");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime")
                        .HasComment("StartTime");

                    b.Property<string>("StatusCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("StatusCd");

                    b.Property<string>("TeacherName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("TeacherName");

                    b.HasKey("Id");

                    b.ToTable("MOD_LESSION_TIME", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Content");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasComment("Date");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Key");

                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasComment("TypeId");

                    b.HasKey("Id");

                    b.ToTable("MOD_LOG", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModMeeting", b =>
                {
                    b.Property<int>("GroupId")
                        .HasColumnType("int")
                        .HasComment("GroupId");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasComment("Date");

                    b.Property<string>("AreaComment")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("AreaComment");

                    b.Property<int>("AreaId")
                        .HasColumnType("int")
                        .HasComment("AreaId");

                    b.Property<string>("AreaName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("AreaName");

                    b.Property<string>("AttendComment")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("AttendComment");

                    b.Property<int>("ChildAttend")
                        .HasColumnType("int")
                        .HasComment("ChildAttend");

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Comment");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime")
                        .HasComment("DateCreate");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime")
                        .HasComment("DateUpdate");

                    b.Property<int>("DepId")
                        .HasColumnType("int")
                        .HasComment("DepId");

                    b.Property<int>("ExpNo")
                        .HasColumnType("int")
                        .HasComment("ExpNo");

                    b.Property<string>("GroupComment")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("GroupComment");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("GroupName");

                    b.Property<int>("GroupTypeId")
                        .HasColumnType("int")
                        .HasComment("GroupTypeId");

                    b.Property<string>("MeetingTime")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("MeetingTime");

                    b.Property<int>("NewCommerAttend")
                        .HasColumnType("int")
                        .HasComment("NewCommerAttend");

                    b.Property<int>("NoneGroupAttend")
                        .HasColumnType("int")
                        .HasComment("NoneGroupAttend");

                    b.Property<int>("OrgId")
                        .HasColumnType("int")
                        .HasComment("OrgId");

                    b.Property<string>("StatusCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("StatusCd");

                    b.Property<string>("UserCreate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserCreate");

                    b.Property<string>("UserUpdate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserUpdate");

                    b.Property<int?>("WeekOfExp")
                        .HasColumnType("int")
                        .HasComment("WeekOfExp");

                    b.Property<string>("WorshipComment")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("WorshipComment");

                    b.Property<int>("WorshipNoneGroupAttend")
                        .HasColumnType("int")
                        .HasComment("WorshipNoneGroupAttend");

                    b.Property<string>("ZoneComment")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("ZoneComment");

                    b.Property<int>("ZoneId")
                        .HasColumnType("int")
                        .HasComment("ZoneId");

                    b.Property<string>("ZoneName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("ZoneName");

                    b.HasKey("GroupId", "Date");

                    b.ToTable("MOD_MEETING", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModMeetingMember", b =>
                {
                    b.Property<int>("GroupId")
                        .HasColumnType("int")
                        .HasComment("GroupId");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasComment("Date");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasComment("MemberId");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Comment");

                    b.Property<int>("IntField1")
                        .HasColumnType("int")
                        .HasComment("IntField1");

                    b.Property<int>("IntField2")
                        .HasColumnType("int")
                        .HasComment("IntField2");

                    b.Property<int>("IntField3")
                        .HasColumnType("int")
                        .HasComment("IntField3");

                    b.Property<bool>("IsAttended")
                        .HasColumnType("bit")
                        .HasComment("IsAttended");

                    b.Property<bool>("IsGroupAttendExpected")
                        .HasColumnType("bit")
                        .HasComment("IsGroupAttendExpected");

                    b.Property<bool>("IsVisit")
                        .HasColumnType("bit")
                        .HasComment("IsVisit");

                    b.Property<bool>("IsWorshipAttendExpected")
                        .HasColumnType("bit")
                        .HasComment("IsWorshipAttendExpected");

                    b.Property<bool>("IsWorshipAttended")
                        .HasColumnType("bit")
                        .HasComment("IsWorshipAttended");

                    b.Property<string>("MemberName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("MemberName");

                    b.Property<string>("MemberRoles")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("MemberRoles");

                    b.Property<string>("MemberStatusCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("MemberStatusCd");

                    b.HasKey("GroupId", "Date", "MemberId");

                    b.ToTable("MOD_MEETING_MEMBER", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Area")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Area");

                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasComment("AreaId");

                    b.Property<string>("BaptizeGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("BaptizeGroup");

                    b.Property<string>("BaptizeOrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("BaptizeOrgName");

                    b.Property<int?>("BaptizeTypeId")
                        .HasColumnType("int")
                        .HasComment("BaptizeTypeId");

                    b.Property<DateTime?>("Baptizeday")
                        .HasColumnType("datetime")
                        .HasComment("Baptizeday");

                    b.Property<string>("Baptizer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Baptizer");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime")
                        .HasComment("Birthday");

                    b.Property<string>("BizPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("BizPhone");

                    b.Property<string>("Career")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Career");

                    b.Property<string>("CareerComment")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("CareerComment");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasComment("CategoryId");

                    b.Property<string>("Child1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Child1");

                    b.Property<string>("Child2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Child2");

                    b.Property<string>("Child3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Child3");

                    b.Property<string>("Child4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Child4");

                    b.Property<string>("Comment")
                        .HasColumnType("ntext")
                        .HasComment("Comment");

                    b.Property<string>("ContactAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("ContactAddress");

                    b.Property<string>("ContactCellPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("ContactCellPhone");

                    b.Property<string>("ContactCellPhone2")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("ContactCellPhone2");

                    b.Property<string>("ContactCity")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("ContactCity");

                    b.Property<string>("ContactPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("ContactPhone");

                    b.Property<string>("ContactTimes")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("ContactTimes");

                    b.Property<string>("ContactZipCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasComment("ContactZipCode");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime")
                        .HasComment("DateCreate");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime")
                        .HasComment("DateUpdate");

                    b.Property<string>("Department")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Department");

                    b.Property<int?>("EducationGrade")
                        .HasColumnType("int")
                        .HasComment("EducationGrade");

                    b.Property<string>("EducationSchool")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("EducationSchool");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Email");

                    b.Property<string>("EngName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("EngName");

                    b.Property<string>("Father")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Father");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("Fax");

                    b.Property<DateTime?>("FirstGroupMeeting")
                        .HasColumnType("datetime")
                        .HasComment("FirstGroupMeeting");

                    b.Property<DateTime?>("FirstSermon")
                        .HasColumnType("datetime")
                        .HasComment("FirstSermon");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength()
                        .HasComment("Gender");

                    b.Property<DateTime?>("GrantedDate")
                        .HasColumnType("datetime")
                        .HasComment("GrantedDate");

                    b.Property<string>("Group")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Group");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int")
                        .HasComment("GroupId");

                    b.Property<DateTime?>("GroupLeaderDate")
                        .HasColumnType("datetime")
                        .HasComment("GroupLeaderDate");

                    b.Property<string>("HomeAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("HomeAddress");

                    b.Property<string>("Identifier")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasComment("Identifier");

                    b.Property<string>("Idnumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("IDNumber")
                        .HasComment("Idnumber");

                    b.Property<string>("Interests")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Interests");

                    b.Property<string>("Introducer")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Introducer");

                    b.Property<string>("IntroducerGroup")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("IntroducerGroup");

                    b.Property<bool>("IsAllowLession")
                        .HasColumnType("bit")
                        .HasComment("IsAllowLession");

                    b.Property<bool?>("IsBaptize")
                        .HasColumnType("bit")
                        .HasComment("IsBaptize");

                    b.Property<bool>("IsContract")
                        .HasColumnType("bit")
                        .HasComment("IsContract");

                    b.Property<bool>("IsE1")
                        .HasColumnType("bit")
                        .HasComment("IsE1");

                    b.Property<bool>("IsE2")
                        .HasColumnType("bit")
                        .HasComment("IsE2");

                    b.Property<bool>("IsE3")
                        .HasColumnType("bit")
                        .HasComment("IsE3");

                    b.Property<bool>("IsE4")
                        .HasColumnType("bit")
                        .HasComment("IsE4");

                    b.Property<bool>("IsEducation")
                        .HasColumnType("bit")
                        .HasComment("IsEducation");

                    b.Property<bool>("IsFromExp")
                        .HasColumnType("bit")
                        .HasComment("IsFromExp");

                    b.Property<bool>("IsGranted")
                        .HasColumnType("bit")
                        .HasComment("IsGranted");

                    b.Property<bool>("IsGroupAttendExpected")
                        .HasColumnType("bit")
                        .HasComment("IsGroupAttendExpected");

                    b.Property<bool>("IsHasCommitment")
                        .HasColumnType("bit")
                        .HasComment("IsHasCommitment");

                    b.Property<bool>("IsReserved")
                        .HasColumnType("bit")
                        .HasComment("IsReserved");

                    b.Property<bool>("IsTerm")
                        .HasColumnType("bit")
                        .HasComment("IsTerm");

                    b.Property<bool>("IsWorshipAttendExpected")
                        .HasColumnType("bit")
                        .HasComment("IsWorshipAttendExpected");

                    b.Property<DateTime?>("LastMovedDate")
                        .HasColumnType("datetime")
                        .HasComment("LastMovedDate");

                    b.Property<string>("LevelofEducation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("LevelofEducation");

                    b.Property<int?>("MarriageId")
                        .HasColumnType("int")
                        .HasComment("MarriageId");

                    b.Property<string>("Minister")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Minister");

                    b.Property<string>("Mother")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Mother");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Name");

                    b.Property<string>("OrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("OrgName");

                    b.Property<string>("OrgPriest")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("OrgPriest");

                    b.Property<string>("OrgTitle")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("OrgTitle");

                    b.Property<Guid>("PortalId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("PortalId");

                    b.Property<string>("RelativeCellPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("RelativeCellPhone");

                    b.Property<string>("RelativeName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("RelativeName");

                    b.Property<string>("RelativeRelation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("RelativeRelation");

                    b.Property<string>("SchoolTimeCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("SchoolTimeCd");

                    b.Property<DateTime?>("SettleDate")
                        .HasColumnType("datetime")
                        .HasComment("SettleDate");

                    b.Property<string>("SourceCd")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("SourceCd");

                    b.Property<string>("Spouse")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Spouse");

                    b.Property<string>("StatusCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("StatusCd");

                    b.Property<string>("UserCreate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserCreate");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("UserId");

                    b.Property<string>("UserUpdate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserUpdate");

                    b.Property<string>("Zone")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Zone");

                    b.Property<int?>("ZoneId")
                        .HasColumnType("int")
                        .HasComment("ZoneId");

                    b.HasKey("Id");

                    b.ToTable("MOD_MEMBER", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModMemberClass", b =>
                {
                    b.Property<string>("CategoryCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("CategoryCode");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasComment("CategoryId");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("CategoryName");

                    b.Property<int>("ClassId")
                        .HasColumnType("int")
                        .HasComment("ClassId");

                    b.Property<bool>("ClassWorkDone")
                        .HasColumnType("bit")
                        .HasComment("ClassWorkDone");

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Comment");

                    b.Property<decimal>("Credit")
                        .HasColumnType("decimal(4,1)")
                        .HasComment("Credit");

                    b.Property<decimal>("CreditEarn")
                        .HasColumnType("decimal(4,1)")
                        .HasComment("CreditEarn");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime")
                        .HasComment("DateCreate");

                    b.Property<DateTime?>("DateRecorded")
                        .HasColumnType("datetime")
                        .HasComment("DateRecorded");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime")
                        .HasComment("DateUpdate");

                    b.Property<int>("Grade")
                        .HasColumnType("int")
                        .HasComment("Grade");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("LessionCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("LessionCode");

                    b.Property<int>("LessionId")
                        .HasColumnType("int")
                        .HasComment("LessionId");

                    b.Property<string>("LessionName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("LessionName");

                    b.Property<int>("LessionNo")
                        .HasColumnType("int")
                        .HasComment("LessionNo");

                    b.Property<int?>("Line")
                        .HasColumnType("int")
                        .HasComment("Line");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasComment("MemberId");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasComment("OrderId");

                    b.Property<string>("OrderIdentifer")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasComment("OrderIdentifer");

                    b.Property<int?>("Position")
                        .HasColumnType("int")
                        .HasComment("Position");

                    b.Property<decimal?>("Price")
                        .HasColumnType("money")
                        .HasComment("Price");

                    b.Property<string>("PriceName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("PriceName");

                    b.Property<string>("RecordStatusCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("RecordStatusCd");

                    b.Property<int?>("SelectedTimeId")
                        .HasColumnType("int")
                        .HasComment("SelectedTimeId");

                    b.Property<string>("StatusCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("StatusCd");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Team");

                    b.Property<string>("UserCreate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserCreate");

                    b.Property<string>("UserUpdate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserUpdate");

                    b.ToTable("MOD_MEMBER_CLASS", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModMemberClassDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("CheckIn")
                        .HasColumnType("bit")
                        .HasComment("CheckIn");

                    b.Property<DateTime?>("CheckInDate")
                        .HasColumnType("datetime")
                        .HasComment("CheckInDate");

                    b.Property<DateTime>("ClassDate")
                        .HasColumnType("datetime")
                        .HasComment("ClassDate");

                    b.Property<int>("ClassDayId")
                        .HasColumnType("int")
                        .HasComment("ClassDayId");

                    b.Property<int>("ClassTimeId")
                        .HasColumnType("int")
                        .HasComment("ClassTimeId");

                    b.Property<string>("Comment")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("Comment");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime")
                        .HasComment("DateCreate");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime")
                        .HasComment("DateUpdate");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime")
                        .HasComment("EndTime");

                    b.Property<int>("MemberClassId")
                        .HasColumnType("int")
                        .HasComment("MemberClassId");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime")
                        .HasComment("StartTime");

                    b.Property<string>("UserCreate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserCreate");

                    b.Property<string>("UserUpdate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserUpdate");

                    b.HasKey("Id");

                    b.ToTable("MOD_MEMBER_CLASS_DAY", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModMemberClassDayTerm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClassTermId")
                        .HasColumnType("int")
                        .HasComment("ClassTermId");

                    b.Property<string>("Comment")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("Comment");

                    b.Property<bool>("IsDone")
                        .HasColumnType("bit")
                        .HasComment("IsDone");

                    b.Property<int>("MemberClassDayId")
                        .HasColumnType("int")
                        .HasComment("MemberClassDayId");

                    b.HasKey("Id");

                    b.ToTable("MOD_MEMBER_CLASS_DAY_TERM", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModMemberClassTime", b =>
                {
                    b.Property<string>("ClassCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasComment("ClassCode");

                    b.Property<int>("ClassId")
                        .HasColumnType("int")
                        .HasComment("ClassId");

                    b.Property<int>("ClassTimeId")
                        .HasColumnType("int")
                        .HasComment("ClassTimeId");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("MemberClassId")
                        .HasColumnType("int")
                        .HasComment("MemberClassId");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasComment("OrderId");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int")
                        .HasComment("SortOrder");

                    b.ToTable("MOD_MEMBER_CLASS_TIME", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModMemberInTag", b =>
                {
                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasComment("MemberId");

                    b.Property<Guid>("TagId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("TagId");

                    b.HasKey("MemberId", "TagId");

                    b.ToTable("MOD_MEMBER_IN_TAG", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModMemberLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasComment("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime")
                        .HasComment("DateUpdate");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasComment("MemberId");

                    b.Property<string>("MemberName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("MemberName");

                    b.Property<string>("NewState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("NewState");

                    b.Property<int?>("OldGroupId")
                        .HasColumnType("int")
                        .HasComment("OldGroupId");

                    b.Property<string>("OldState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("OldState");

                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasComment("TypeId");

                    b.Property<Guid?>("UserIdUpdate")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("UserIdUpdate");

                    b.Property<string>("UserUpdate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserUpdate");

                    b.HasKey("Id");

                    b.ToTable("MOD_MEMBER_LOG", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModMemberMinister", b =>
                {
                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasComment("MemberId");

                    b.Property<int>("MinisterId")
                        .HasColumnType("int")
                        .HasComment("MinisterId");

                    b.HasKey("MemberId", "MinisterId");

                    b.ToTable("MOD_MEMBER_MINISTER", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModMemberMinisterLog", b =>
                {
                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasComment("MemberId");

                    b.Property<int>("MinisterId")
                        .HasColumnType("int")
                        .HasComment("MinisterId");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime")
                        .HasComment("DateStart");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("datetime")
                        .HasComment("DateEnd");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime")
                        .HasComment("DateUpdate");

                    b.Property<string>("MinisterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("MinisterName");

                    b.Property<string>("UserUpdate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserUpdate");

                    b.HasKey("MemberId", "MinisterId", "DateStart");

                    b.ToTable("MOD_MEMBER_MINISTER_LOG", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModMinister", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Comment");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime")
                        .HasComment("DateCreate");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime")
                        .HasComment("DateUpdate");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Description");

                    b.Property<int?>("MinisterGroupId")
                        .HasColumnType("int")
                        .HasComment("MinisterGroupId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Name");

                    b.Property<string>("Roles")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Roles");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int")
                        .HasComment("SortOrder");

                    b.Property<string>("StatusCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("StatusCd");

                    b.Property<string>("UserCreate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserCreate");

                    b.Property<string>("UserUpdate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserUpdate");

                    b.HasKey("Id");

                    b.ToTable("MOD_MINISTER", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModMinisterGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Comment");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime")
                        .HasComment("DateCreate");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime")
                        .HasComment("DateUpdate");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Name");

                    b.Property<int>("OrgId")
                        .HasColumnType("int")
                        .HasComment("OrgId");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int")
                        .HasComment("SortOrder");

                    b.Property<string>("StatusCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("StatusCd");

                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasComment("TypeId");

                    b.Property<string>("UserCreate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserCreate");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("UserId");

                    b.Property<string>("UserUpdate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserUpdate");

                    b.HasKey("Id");

                    b.ToTable("MOD_MINISTER_GROUP", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModNewcommer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AssignAreaId")
                        .HasColumnType("int")
                        .HasComment("AssignAreaId");

                    b.Property<string>("AssignAreaName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("AssignAreaName");

                    b.Property<int?>("AssignGroupId")
                        .HasColumnType("int")
                        .HasComment("AssignGroupId");

                    b.Property<string>("AssignGroupName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("AssignGroupName");

                    b.Property<string>("AssignUser")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("AssignUser");

                    b.Property<int?>("AssignZoneId")
                        .HasColumnType("int")
                        .HasComment("AssignZoneId");

                    b.Property<string>("AssignZoneName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("AssignZoneName");

                    b.Property<int?>("BaptizeTypeId")
                        .HasColumnType("int")
                        .HasComment("BaptizeTypeId");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime")
                        .HasComment("Birthday");

                    b.Property<Guid?>("CampaignId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("CampaignId");

                    b.Property<string>("Career")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Career");

                    b.Property<string>("CareerComment")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("CareerComment");

                    b.Property<string>("Comment")
                        .HasColumnType("ntext")
                        .HasComment("Comment");

                    b.Property<string>("ContactAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("ContactAddress");

                    b.Property<string>("ContactCellPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("ContactCellPhone");

                    b.Property<string>("ContactCity")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("ContactCity");

                    b.Property<string>("ContactPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("ContactPhone");

                    b.Property<string>("ContactZipCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasComment("ContactZipCode");

                    b.Property<DateTime?>("DateAssign")
                        .HasColumnType("datetime")
                        .HasComment("DateAssign");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime")
                        .HasComment("DateCreate");

                    b.Property<DateTime?>("DateEntry")
                        .HasColumnType("datetime")
                        .HasComment("DateEntry");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime")
                        .HasComment("DateUpdate");

                    b.Property<int?>("EducationGrade")
                        .HasColumnType("int")
                        .HasComment("EducationGrade");

                    b.Property<string>("EducationSchool")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("EducationSchool");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Email");

                    b.Property<string>("EngName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("EngName");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength()
                        .HasComment("Gender");

                    b.Property<bool>("IsAllowLession")
                        .HasColumnType("bit")
                        .HasComment("IsAllowLession");

                    b.Property<bool>("IsEducation")
                        .HasColumnType("bit")
                        .HasComment("IsEducation");

                    b.Property<bool>("IsHasCommitment")
                        .HasColumnType("bit")
                        .HasComment("IsHasCommitment");

                    b.Property<string>("LevelofEducation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("LevelofEducation");

                    b.Property<int?>("MarriageId")
                        .HasColumnType("int")
                        .HasComment("MarriageId");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int")
                        .HasComment("MemberId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Name");

                    b.Property<string>("NcActivityGroup")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Nc_ActivityGroup")
                        .HasComment("NcActivityGroup");

                    b.Property<string>("NcActivityName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Nc_ActivityName")
                        .HasComment("NcActivityName");

                    b.Property<string>("NcActivityNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Nc_ActivityNo")
                        .HasComment("NcActivityNo");

                    b.Property<string>("NcChristianComeReason")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Nc_ChristianComeReason")
                        .HasComment("NcChristianComeReason");

                    b.Property<DateTime?>("NcDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Nc_Date")
                        .HasComment("NcDate");

                    b.Property<string>("NcFollowGroup")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Nc_FollowGroup")
                        .HasComment("NcFollowGroup");

                    b.Property<int>("NcGroupIntentionId")
                        .HasColumnType("int")
                        .HasColumnName("Nc_GroupIntentionId")
                        .HasComment("NcGroupIntentionId");

                    b.Property<string>("NcInterviewComment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nc_InterviewComment")
                        .HasComment("NcInterviewComment");

                    b.Property<string>("NcInterviewContent")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nc_InterviewContent")
                        .HasComment("NcInterviewContent");

                    b.Property<DateTime?>("NcInterviewDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Nc_InterviewDate")
                        .HasComment("NcInterviewDate");

                    b.Property<string>("NcInterviewer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Nc_Interviewer")
                        .HasComment("NcInterviewer");

                    b.Property<string>("NcIntroducer")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Nc_Introducer")
                        .HasComment("NcIntroducer");

                    b.Property<string>("NcIntroducerGroup")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Nc_IntroducerGroup")
                        .HasComment("NcIntroducerGroup");

                    b.Property<bool>("NcIntroducerIsRelated")
                        .HasColumnType("bit")
                        .HasColumnName("Nc_IntroducerIsRelated")
                        .HasComment("NcIntroducerIsRelated");

                    b.Property<string>("NcIntroducerPhone")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Nc_IntroducerPhone")
                        .HasComment("NcIntroducerPhone");

                    b.Property<string>("NcIntroducerRelationship")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Nc_IntroducerRelationship")
                        .HasComment("NcIntroducerRelationship");

                    b.Property<bool>("NcIsChristian")
                        .HasColumnType("bit")
                        .HasColumnName("Nc_IsChristian")
                        .HasComment("NcIsChristian");

                    b.Property<bool>("NcIsFirstTimeCome")
                        .HasColumnType("bit")
                        .HasColumnName("Nc_IsFirstTimeCome")
                        .HasComment("NcIsFirstTimeCome");

                    b.Property<bool>("NcIsReadyForE1")
                        .HasColumnType("bit")
                        .HasColumnName("Nc_IsReadyForE1")
                        .HasComment("NcIsReadyForE1");

                    b.Property<string>("NcOrginalChurch")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Nc_OrginalChurch")
                        .HasComment("NcOrginalChurch");

                    b.Property<string>("NcOrginalChurchLocation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Nc_OrginalChurchLocation")
                        .HasComment("NcOrginalChurchLocation");

                    b.Property<string>("NcOrginalChurchPriest")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Nc_OrginalChurchPriest")
                        .HasComment("NcOrginalChurchPriest");

                    b.Property<string>("NcPrayContent")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nc_PrayContent")
                        .HasComment("NcPrayContent");

                    b.Property<string>("NcPreferContactTimes")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Nc_PreferContactTimes")
                        .HasComment("NcPreferContactTimes");

                    b.Property<string>("NcPreferGroup")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Nc_PreferGroup")
                        .HasComment("NcPreferGroup");

                    b.Property<DateTime?>("NcPreferGroupDayTime")
                        .HasColumnType("datetime")
                        .HasColumnName("Nc_PreferGroupDayTime")
                        .HasComment("NcPreferGroupDayTime");

                    b.Property<string>("NcPreferGroupTimes")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Nc_PreferGroupTimes")
                        .HasComment("NcPreferGroupTimes");

                    b.Property<string>("NcPreferGroupTypes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Nc_PreferGroupTypes")
                        .HasComment("NcPreferGroupTypes");

                    b.Property<int?>("NcPreferGroupWeekDay")
                        .HasColumnType("int")
                        .HasColumnName("Nc_PreferGroupWeekDay")
                        .HasComment("NcPreferGroupWeekDay");

                    b.Property<string>("NcSuggestions")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nc_Suggestions")
                        .HasComment("NcSuggestions");

                    b.Property<string>("NcTrace1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nc_Trace1")
                        .HasComment("NcTrace1");

                    b.Property<string>("NcTrace2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nc_Trace2")
                        .HasComment("NcTrace2");

                    b.Property<string>("NcTrace3")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nc_Trace3")
                        .HasComment("NcTrace3");

                    b.Property<string>("NcTrace4")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nc_Trace4")
                        .HasComment("NcTrace4");

                    b.Property<string>("NcTraceComment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nc_TraceComment")
                        .HasComment("NcTraceComment");

                    b.Property<int>("OrgId")
                        .HasColumnType("int")
                        .HasComment("OrgId");

                    b.Property<Guid>("PortalId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("PortalId");

                    b.Property<string>("SchoolTimeCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("SchoolTimeCd");

                    b.Property<string>("StatusCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("StatusCd");

                    b.Property<Guid?>("TagId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("TagId");

                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasComment("TypeId");

                    b.Property<string>("UserCreate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserCreate");

                    b.Property<string>("UserUpdate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserUpdate");

                    b.HasKey("Id");

                    b.ToTable("MOD_NEWCOMMER", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModNews", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Comment");

                    b.Property<string>("Content")
                        .HasColumnType("ntext")
                        .HasComment("Content");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime")
                        .HasComment("Date");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime")
                        .HasComment("DateCreate");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime")
                        .HasComment("DateUpdate");

                    b.Property<string>("StatusCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("StatusCd");

                    b.Property<string>("Subject")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasComment("Subject");

                    b.Property<string>("UserCreate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserCreate");

                    b.Property<string>("UserUpdate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserUpdate");

                    b.HasKey("Id");

                    b.ToTable("MOD_NEWS", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Area")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Area");

                    b.Property<string>("Comment")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("Comment");

                    b.Property<string>("ContactAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("ContactAddress");

                    b.Property<string>("ContactCellPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("ContactCellPhone");

                    b.Property<string>("ContactEmail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("ContactEmail");

                    b.Property<string>("ContactPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("ContactPhone");

                    b.Property<string>("ContactZipCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasComment("ContactZipCode");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime")
                        .HasComment("DateCreate");

                    b.Property<DateTime?>("DateRecorded")
                        .HasColumnType("datetime")
                        .HasComment("DateRecorded");

                    b.Property<DateTime?>("DateTextbook")
                        .HasColumnType("datetime")
                        .HasComment("DateTextbook");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime")
                        .HasComment("DateUpdate");

                    b.Property<string>("Department")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Department");

                    b.Property<decimal>("DepositAmount")
                        .HasColumnType("money")
                        .HasComment("DepositAmount");

                    b.Property<DateTime?>("DepositPayedDate")
                        .HasColumnType("datetime")
                        .HasComment("DepositPayedDate");

                    b.Property<string>("DepositPayee")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("DepositPayee");

                    b.Property<string>("EmgPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("EmgPhone");

                    b.Property<string>("Group")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Group");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int")
                        .HasComment("GroupId");

                    b.Property<string>("Identifer")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasComment("Identifer");

                    b.Property<string>("Idnumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("IDNumber")
                        .HasComment("Idnumber");

                    b.Property<string>("InvoiceNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("InvoiceNo");

                    b.Property<bool>("IsCouple")
                        .HasColumnType("bit")
                        .HasComment("IsCouple");

                    b.Property<bool>("IsNeedTraffic")
                        .HasColumnType("bit")
                        .HasComment("IsNeedTraffic");

                    b.Property<string>("Mates")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("Mates");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasComment("MemberId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Name");

                    b.Property<int>("OrgId")
                        .HasColumnType("int")
                        .HasComment("OrgId");

                    b.Property<string>("OrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("OrgName");

                    b.Property<string>("PaymentComment")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("PaymentComment");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("PaymentMethod");

                    b.Property<Guid>("PortalId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("PortalId");

                    b.Property<DateTime?>("ReceptionDate")
                        .HasColumnType("datetime")
                        .HasComment("ReceptionDate");

                    b.Property<string>("RecordStatusCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("RecordStatusCd");

                    b.Property<string>("RelativeCellPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("RelativeCellPhone");

                    b.Property<string>("RelativeName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("RelativeName");

                    b.Property<decimal>("RemainingAmount")
                        .HasColumnType("money")
                        .HasComment("RemainingAmount");

                    b.Property<DateTime?>("RemainingPayedDate")
                        .HasColumnType("datetime")
                        .HasComment("RemainingPayedDate");

                    b.Property<string>("RemainingPayee")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("RemainingPayee");

                    b.Property<string>("Specials")
                        .HasColumnType("ntext")
                        .HasComment("Specials");

                    b.Property<string>("Spouse")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Spouse");

                    b.Property<string>("StatusCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("StatusCd");

                    b.Property<string>("StudentCd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("StudentCd");

                    b.Property<int?>("StudentGrade")
                        .HasColumnType("int")
                        .HasComment("StudentGrade");

                    b.Property<string>("TextbookName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("TextbookName");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("money")
                        .HasComment("TotalAmount");

                    b.Property<int?>("TranslateId")
                        .HasColumnType("int")
                        .HasComment("TranslateId");

                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasComment("TypeId");

                    b.Property<string>("UserCancel")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserCancel");

                    b.Property<string>("UserCreate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserCreate");

                    b.Property<string>("UserUpdate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserUpdate");

                    b.Property<string>("Zone")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Zone");

                    b.HasKey("Id");

                    b.ToTable("MOD_ORDER", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModOrderInvoice", b =>
                {
                    b.Property<decimal>("Amount")
                        .HasColumnType("money")
                        .HasComment("Amount");

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Comment");

                    b.Property<string>("CustomNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("CustomNo");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime")
                        .HasComment("DateCreate");

                    b.Property<DateTime?>("DateRecorded")
                        .HasColumnType("datetime")
                        .HasComment("DateRecorded");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime")
                        .HasComment("DateUpdate");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasComment("Identifier");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasComment("OrderId");

                    b.Property<string>("Payee")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Payee");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("PaymentMethod");

                    b.Property<string>("PriceName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("PriceName");

                    b.Property<string>("RecordStatusCd")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("RecordStatusCd");

                    b.Property<string>("StatusCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("StatusCd");

                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasComment("TypeId");

                    b.Property<string>("UserCreate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserCreate");

                    b.Property<string>("UserRecorded")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserRecorded");

                    b.Property<string>("UserUpdate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserUpdate");

                    b.ToTable("MOD_ORDER_INVOICE", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModPreorder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BaptizeTypeId")
                        .HasColumnType("int")
                        .HasComment("BaptizeTypeId");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime")
                        .HasComment("Birthday");

                    b.Property<int>("ClassId")
                        .HasColumnType("int")
                        .HasComment("ClassId");

                    b.Property<int>("ClassTime1")
                        .HasColumnType("int")
                        .HasComment("ClassTime1");

                    b.Property<int?>("ClassTime2")
                        .HasColumnType("int")
                        .HasComment("ClassTime2");

                    b.Property<int?>("ClassTime3")
                        .HasColumnType("int")
                        .HasComment("ClassTime3");

                    b.Property<string>("Comment")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("Comment");

                    b.Property<string>("ContactAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("ContactAddress");

                    b.Property<string>("ContactCellPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("ContactCellPhone");

                    b.Property<string>("ContactEmail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("ContactEmail");

                    b.Property<string>("ContactPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("ContactPhone");

                    b.Property<string>("ContactZipCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasComment("ContactZipCode");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime")
                        .HasComment("DateCreate");

                    b.Property<DateTime?>("DateTextbook")
                        .HasColumnType("datetime")
                        .HasComment("DateTextbook");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime")
                        .HasComment("DateUpdate");

                    b.Property<string>("EducationSchool")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("EducationSchool");

                    b.Property<string>("EmgPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("EmgPhone");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength()
                        .HasComment("Gender");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int")
                        .HasComment("GroupId");

                    b.Property<string>("Identifer")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasComment("Identifer");

                    b.Property<string>("Idnumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("IDNumber")
                        .HasComment("Idnumber");

                    b.Property<string>("Introducer")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Introducer");

                    b.Property<string>("IntroducerGroup")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("IntroducerGroup");

                    b.Property<bool?>("IsAllowLession")
                        .HasColumnType("bit")
                        .HasComment("IsAllowLession");

                    b.Property<bool>("IsNeedTraffic")
                        .HasColumnType("bit")
                        .HasComment("IsNeedTraffic");

                    b.Property<string>("Mates")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("Mates");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Name");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasComment("OrderId");

                    b.Property<int>("OrgId")
                        .HasColumnType("int")
                        .HasComment("OrgId");

                    b.Property<DateTime?>("ReceptionDate")
                        .HasColumnType("datetime")
                        .HasComment("ReceptionDate");

                    b.Property<string>("RelativeCellPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("RelativeCellPhone");

                    b.Property<string>("RelativeName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("RelativeName");

                    b.Property<string>("RelativeRelation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("RelativeRelation");

                    b.Property<string>("Specials")
                        .HasColumnType("ntext")
                        .HasComment("Specials");

                    b.Property<string>("StatusCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("StatusCd");

                    b.Property<string>("StudentCd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("StudentCd");

                    b.Property<int?>("StudentGrade")
                        .HasColumnType("int")
                        .HasComment("StudentGrade");

                    b.Property<string>("TextbookName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("TextbookName");

                    b.Property<int?>("TranslateId")
                        .HasColumnType("int")
                        .HasComment("TranslateId");

                    b.Property<string>("UserCreate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserCreate");

                    b.Property<string>("UserUpdate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserUpdate");

                    b.HasKey("Id");

                    b.ToTable("MOD_PREORDER", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModRollcall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ActivityId")
                        .HasColumnType("int")
                        .HasComment("ActivityId");

                    b.Property<int?>("ActivityWorkId")
                        .HasColumnType("int")
                        .HasComment("ActivityWorkId");

                    b.Property<int>("AreaId")
                        .HasColumnType("int")
                        .HasComment("AreaId");

                    b.Property<string>("AreaName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("AreaName");

                    b.Property<Guid?>("CampaignId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("CampaignId");

                    b.Property<int?>("CampaignSpdayId")
                        .HasColumnType("int")
                        .HasComment("CampaignSpdayId");

                    b.Property<string>("Comment")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("Comment");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime")
                        .HasComment("DateCreate");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime")
                        .HasComment("DateUpdate");

                    b.Property<int>("DepId")
                        .HasColumnType("int")
                        .HasComment("DepId");

                    b.Property<int>("GroupId")
                        .HasColumnType("int")
                        .HasComment("GroupId");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("GroupName");

                    b.Property<int>("IntField1")
                        .HasColumnType("int")
                        .HasComment("IntField1");

                    b.Property<int>("IntField2")
                        .HasColumnType("int")
                        .HasComment("IntField2");

                    b.Property<int>("IntField3")
                        .HasColumnType("int")
                        .HasComment("IntField3");

                    b.Property<int>("IntField4")
                        .HasColumnType("int")
                        .HasComment("IntField4");

                    b.Property<int>("IntField5")
                        .HasColumnType("int")
                        .HasComment("IntField5");

                    b.Property<bool>("IsAttend")
                        .HasColumnType("bit")
                        .HasComment("IsAttend");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasComment("MemberId");

                    b.Property<string>("MemberIdentifier")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasComment("MemberIdentifier");

                    b.Property<string>("MemberIdnumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("MemberIDNumber")
                        .HasComment("MemberIdnumber");

                    b.Property<bool>("MemberIsUser")
                        .HasColumnType("bit")
                        .HasComment("MemberIsUser");

                    b.Property<string>("MemberName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("MemberName");

                    b.Property<string>("No")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasComment("No");

                    b.Property<int>("OrgId")
                        .HasColumnType("int")
                        .HasComment("OrgId");

                    b.Property<DateTime>("RollCallDate")
                        .HasColumnType("datetime")
                        .HasComment("RollCallDate");

                    b.Property<int>("RollCallTypeId")
                        .HasColumnType("int")
                        .HasComment("RollCallTypeId");

                    b.Property<string>("UserCreate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserCreate");

                    b.Property<string>("UserUpdate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserUpdate");

                    b.Property<int>("ZoneId")
                        .HasColumnType("int")
                        .HasComment("ZoneId");

                    b.Property<string>("ZoneName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("ZoneName");

                    b.HasKey("Id");

                    b.ToTable("MOD_ROLLCALL", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModRollcallWork", b =>
                {
                    b.Property<int>("RollCallId")
                        .HasColumnType("int")
                        .HasComment("RollCallId");

                    b.Property<int>("ActivityWorkId")
                        .HasColumnType("int")
                        .HasComment("ActivityWorkId");

                    b.HasKey("RollCallId", "ActivityWorkId");

                    b.ToTable("MOD_ROLLCALL_WORK", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModStatistic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Comment");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime")
                        .HasComment("DateCreate");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime")
                        .HasComment("DateUpdate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Name");

                    b.Property<int>("OrgId")
                        .HasColumnType("int")
                        .HasComment("OrgId");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int")
                        .HasComment("ParentId");

                    b.Property<Guid>("PortalId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("PortalId");

                    b.Property<string>("StatusCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("StatusCd");

                    b.Property<string>("UserCreate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserCreate");

                    b.Property<string>("UserUpdate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserUpdate");

                    b.HasKey("Id");

                    b.ToTable("MOD_STATISTICS", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModStatisticDetail", b =>
                {
                    b.Property<int>("StatisticId")
                        .HasColumnType("int")
                        .HasComment("StatisticId");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasComment("Date");

                    b.Property<int>("Value")
                        .HasColumnType("int")
                        .HasComment("Value");

                    b.HasKey("StatisticId", "Date")
                        .HasName("PK_MOD_STATISTIC_DETAIL_1");

                    b.ToTable("MOD_STATISTIC_DETAIL", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModTag", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()")
                        .HasComment("Id");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasComment("Name");

                    b.Property<Guid>("PortalId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("PortalId");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int")
                        .HasComment("SortOrder");

                    b.Property<string>("TagModule")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("TagModule");

                    b.HasKey("Id");

                    b.ToTable("MOD_TAG", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModTeacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Comment");

                    b.Property<string>("ContactCellPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("ContactCellPhone");

                    b.Property<string>("ContactEmail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("ContactEmail");

                    b.Property<string>("ContactPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("ContactPhone");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime")
                        .HasComment("DateCreate");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime")
                        .HasComment("DateUpdate");

                    b.Property<int>("OrgId")
                        .HasColumnType("int")
                        .HasComment("OrgId");

                    b.Property<Guid>("PortalId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("PortalId");

                    b.Property<string>("StatusCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("StatusCd");

                    b.Property<string>("TeacherName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("TeacherName");

                    b.Property<string>("UserCreate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserCreate");

                    b.Property<string>("UserUpdate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserUpdate");

                    b.HasKey("Id");

                    b.ToTable("MOD_TEACHER", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModZone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasComment("AreaId");

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Comment");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime")
                        .HasComment("DateCreate");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime")
                        .HasComment("DateUpdate");

                    b.Property<int?>("DepId")
                        .HasColumnType("int")
                        .HasComment("DepId");

                    b.Property<int?>("Leader2Id")
                        .HasColumnType("int")
                        .HasComment("Leader2Id");

                    b.Property<string>("Leader2Idnumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Leader2IDNumber")
                        .HasComment("Leader2Idnumber");

                    b.Property<int?>("Leader3Id")
                        .HasColumnType("int")
                        .HasComment("Leader3Id");

                    b.Property<string>("Leader3Idnumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Leader3IDNumber")
                        .HasComment("Leader3Idnumber");

                    b.Property<int?>("LeaderId")
                        .HasColumnType("int")
                        .HasComment("LeaderId");

                    b.Property<string>("LeaderIdnumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("LeaderIDNumber")
                        .HasComment("LeaderIdnumber");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Name");

                    b.Property<int?>("Oid")
                        .HasColumnType("int")
                        .HasColumnName("OId")
                        .HasComment("Oid");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasComment("OrgId");

                    b.Property<string>("StatusCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("StatusCd");

                    b.Property<string>("UserCreate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserCreate");

                    b.Property<string>("UserUpdate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserUpdate");

                    b.HasKey("Id");

                    b.ToTable("MOD_ZONE", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModZoneleader", b =>
                {
                    b.Property<int>("ZoneId")
                        .HasColumnType("int")
                        .HasComment("ZoneId");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasComment("MemberId");

                    b.HasKey("ZoneId", "MemberId");

                    b.ToTable("MOD_ZONELEADER", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.ModZonesupervisor", b =>
                {
                    b.Property<int>("ZoneId")
                        .HasColumnType("int")
                        .HasComment("ZoneId");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasComment("MemberId");

                    b.HasKey("ZoneId", "MemberId");

                    b.ToTable("MOD_ZONESUPERVISOR", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.SecRole", b =>
                {
                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Comment");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime")
                        .HasComment("DateCreate");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime")
                        .HasComment("DateUpdate");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Description");

                    b.Property<bool>("IsAutoAssignment")
                        .HasColumnType("bit")
                        .HasComment("IsAutoAssignment");

                    b.Property<bool?>("IsPublic")
                        .HasColumnType("bit")
                        .HasComment("IsPublic");

                    b.Property<Guid>("PortalId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("PortalId");

                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("RoleId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"), 1L, 1);

                    b.Property<string>("RoleName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("RoleName");

                    b.Property<string>("StatusCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("StatusCd");

                    b.Property<string>("UserCreate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserCreate");

                    b.Property<string>("UserUpdate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserUpdate");

                    b.ToTable("SEC_ROLE", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.SecUser", b =>
                {
                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Comment");

                    b.Property<string>("ContactAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("ContactAddress");

                    b.Property<string>("ContactCellPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("ContactCellPhone");

                    b.Property<string>("ContactEmail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("ContactEmail");

                    b.Property<string>("ContactPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("ContactPhone");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime")
                        .HasComment("DateCreate");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime")
                        .HasComment("DateUpdate");

                    b.Property<string>("Department")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Department");

                    b.Property<string>("Idnumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("IDNumber")
                        .HasComment("Idnumber");

                    b.Property<bool>("IsSuperAdmin")
                        .HasColumnType("bit")
                        .HasComment("IsSuperAdmin");

                    b.Property<string>("JobTitle")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("JobTitle");

                    b.Property<string>("Language")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("Language");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Name");

                    b.Property<string>("StatusCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("StatusCd");

                    b.Property<string>("UserCreate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserCreate");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasComment("UserId");

                    b.Property<string>("UserIdentifier")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength()
                        .HasComment("UserIdentifier");

                    b.Property<string>("UserUpdate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserUpdate");

                    b.ToTable("SEC_USER", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.SecUserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasComment("UserId");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasComment("RoleId");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime")
                        .HasComment("DateCreate");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime")
                        .HasComment("DateUpdate");

                    b.Property<string>("StatusCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("StatusCd");

                    b.Property<string>("UserCreate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserCreate");

                    b.Property<string>("UserUpdate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserUpdate");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("SEC_USER_ROLE", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.SysAdminPermission", b =>
                {
                    b.Property<int>("AdminPermissoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("AdminPermissoinId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminPermissoinId"), 1L, 1);

                    b.Property<string>("Definition")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasComment("Definition");

                    b.Property<bool>("IsAllow")
                        .HasColumnType("bit")
                        .HasComment("IsAllow");

                    b.Property<bool>("IsDeny")
                        .HasColumnType("bit")
                        .HasComment("IsDeny");

                    b.Property<string>("PermissionCd")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasComment("PermissionCd");

                    b.Property<Guid>("PortalId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("PortalId");

                    b.Property<string>("RoleName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("RoleName");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("UserId");

                    b.HasKey("AdminPermissoinId")
                        .HasName("PK_ADMIN_PERMISSION");

                    b.ToTable("SYS_ADMIN_PERMISSION", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.SysOrganization", b =>
                {
                    b.Property<int>("OrganizationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("OrganizationId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrganizationId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Address");

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Comment");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime")
                        .HasComment("DateCreate");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime")
                        .HasComment("DateUpdate");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Email");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("Fax");

                    b.Property<string>("InvoiceIdentifier")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("InvoiceIdentifier");

                    b.Property<string>("InvoiceTitle")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("InvoiceTitle");

                    b.Property<bool?>("IsInvoiceTitle")
                        .HasColumnType("bit")
                        .HasComment("IsInvoiceTitle");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Name");

                    b.Property<int?>("Oid")
                        .HasColumnType("int")
                        .HasColumnName("OId")
                        .HasComment("Oid");

                    b.Property<string>("Pastor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Pastor");

                    b.Property<int?>("PastorId")
                        .HasColumnType("int")
                        .HasComment("PastorId");

                    b.Property<string>("PastorName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("PastorName");

                    b.Property<string>("Pastorphone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("Pastorphone");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("Phone");

                    b.Property<Guid>("PortalId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("PortalId");

                    b.Property<string>("Site")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Site");

                    b.Property<string>("StatusCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("StatusCd");

                    b.Property<string>("UserCreate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserCreate");

                    b.Property<string>("UserUpdate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserUpdate");

                    b.Property<string>("Zip")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("Zip");

                    b.HasKey("OrganizationId");

                    b.ToTable("SYS_ORGANIZATION", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.SysOrgUser", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("UserId");

                    b.Property<int>("OrgId")
                        .HasColumnType("int")
                        .HasComment("OrgId");

                    b.HasKey("UserId", "OrgId");

                    b.ToTable("SYS_ORG_USER", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.SysPermission", b =>
                {
                    b.Property<int>("PermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("PermissionId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PermissionId"), 1L, 1);

                    b.Property<string>("Definition")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasComment("Definition");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Description");

                    b.Property<string>("PermissionCd")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("PermissionCd");

                    b.HasKey("PermissionId")
                        .HasName("PK_SEC_PERMISSION");

                    b.ToTable("SYS_PERMISSION", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.SysPortal", b =>
                {
                    b.Property<Guid>("PortalId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("PortalId");

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Comment");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime")
                        .HasComment("DateCreate");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime")
                        .HasComment("DateUpdate");

                    b.Property<string>("DefaultLanguage")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("DefaultLanguage");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Description");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Email");

                    b.Property<string>("PortalName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("PortalName");

                    b.Property<string>("StatusCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("StatusCd");

                    b.Property<string>("Theme")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Theme");

                    b.Property<string>("UserCreate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserCreate");

                    b.Property<string>("UserUpdate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserUpdate");

                    b.HasKey("PortalId");

                    b.ToTable("SYS_PORTAL", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.SysSeedIdentity", b =>
                {
                    b.Property<string>("SeedTable")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasComment("SeedTable");

                    b.Property<DateTime?>("ResetDate")
                        .HasColumnType("datetime")
                        .HasComment("ResetDate");

                    b.Property<string>("ResetTypeCd")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasComment("ResetTypeCd");

                    b.Property<int?>("SeedCur")
                        .HasColumnType("int")
                        .HasComment("SeedCur");

                    b.Property<int?>("SeedMax")
                        .HasColumnType("int")
                        .HasComment("SeedMax");

                    b.Property<int?>("SeedMin")
                        .HasColumnType("int")
                        .HasComment("SeedMin");

                    b.HasKey("SeedTable");

                    b.ToTable("SYS_SEED_IDENTITY", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.SysSetting", b =>
                {
                    b.Property<string>("SettingName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("SettingName");

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Comment");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime")
                        .HasComment("DateCreate");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime")
                        .HasComment("DateUpdate");

                    b.Property<bool>("IsSensitive")
                        .HasColumnType("bit")
                        .HasComment("IsSensitive");

                    b.Property<string>("StatusCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("StatusCd");

                    b.Property<string>("UserCreate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserCreate");

                    b.Property<string>("UserUpdate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserUpdate");

                    b.Property<string>("Value")
                        .HasColumnType("ntext")
                        .HasComment("Value");

                    b.HasKey("SettingName")
                        .HasName("PK_SYS_PORTAL_SETTINGS");

                    b.ToTable("SYS_SETTINGS", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.SysSmsResult", b =>
                {
                    b.Property<string>("BatchId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("BatchId");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("money")
                        .HasComment("Cost");

                    b.Property<decimal?>("Credit")
                        .HasColumnType("money")
                        .HasComment("Credit");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime")
                        .HasComment("DateCreate");

                    b.Property<int?>("SendedCount")
                        .HasColumnType("int")
                        .HasComment("SendedCount");

                    b.Property<int?>("UnSend")
                        .HasColumnType("int")
                        .HasComment("UnSend");

                    b.HasKey("BatchId");

                    b.ToTable("SYS_SMS_RESULT", (string)null);
                });

            modelBuilder.Entity("App.Domain.Entities.Features.VwAreaSupervisor", b =>
                {
                    b.Property<int>("AreaId")
                        .HasColumnType("int")
                        .HasComment("AreaId");

                    b.Property<string>("AreaName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("AreaName");

                    b.Property<string>("ContactCellPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("ContactCellPhone");

                    b.Property<string>("ContactPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("ContactPhone");

                    b.Property<int?>("DepId")
                        .HasColumnType("int")
                        .HasComment("DepId");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasComment("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Name");

                    b.ToView("vw_AreaSupervisor");
                });

            modelBuilder.Entity("App.Domain.Entities.Features.VwAspnetApplication", b =>
                {
                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("ApplicationId");

                    b.Property<string>("ApplicationName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("ApplicationName");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Description");

                    b.Property<string>("LoweredApplicationName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("LoweredApplicationName");

                    b.ToView("vw_aspnet_Applications");
                });

            modelBuilder.Entity("App.Domain.Entities.Features.VwAspnetMembershipUser", b =>
                {
                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("ApplicationId");

                    b.Property<string>("Comment")
                        .HasColumnType("ntext")
                        .HasComment("Comment");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime")
                        .HasComment("CreateDate");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Email");

                    b.Property<int>("FailedPasswordAnswerAttemptCount")
                        .HasColumnType("int")
                        .HasComment("FailedPasswordAnswerAttemptCount");

                    b.Property<DateTime>("FailedPasswordAnswerAttemptWindowStart")
                        .HasColumnType("datetime")
                        .HasComment("FailedPasswordAnswerAttemptWindowStart");

                    b.Property<int>("FailedPasswordAttemptCount")
                        .HasColumnType("int")
                        .HasComment("FailedPasswordAttemptCount");

                    b.Property<DateTime>("FailedPasswordAttemptWindowStart")
                        .HasColumnType("datetime")
                        .HasComment("FailedPasswordAttemptWindowStart");

                    b.Property<bool>("IsAnonymous")
                        .HasColumnType("bit")
                        .HasComment("IsAnonymous");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit")
                        .HasComment("IsApproved");

                    b.Property<bool>("IsLockedOut")
                        .HasColumnType("bit")
                        .HasComment("IsLockedOut");

                    b.Property<DateTime>("LastActivityDate")
                        .HasColumnType("datetime")
                        .HasComment("LastActivityDate");

                    b.Property<DateTime>("LastLockoutDate")
                        .HasColumnType("datetime")
                        .HasComment("LastLockoutDate");

                    b.Property<DateTime>("LastLoginDate")
                        .HasColumnType("datetime")
                        .HasComment("LastLoginDate");

                    b.Property<DateTime>("LastPasswordChangedDate")
                        .HasColumnType("datetime")
                        .HasComment("LastPasswordChangedDate");

                    b.Property<string>("LoweredEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("LoweredEmail");

                    b.Property<string>("MobileAlias")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasComment("MobileAlias");

                    b.Property<string>("MobilePin")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("MobilePIN")
                        .HasComment("MobilePin");

                    b.Property<string>("PasswordAnswer")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasComment("PasswordAnswer");

                    b.Property<int>("PasswordFormat")
                        .HasColumnType("int")
                        .HasComment("PasswordFormat");

                    b.Property<string>("PasswordQuestion")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("PasswordQuestion");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("UserId");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("UserName");

                    b.ToView("vw_aspnet_MembershipUsers");
                });

            modelBuilder.Entity("App.Domain.Entities.Features.VwAspnetProfile", b =>
                {
                    b.Property<int?>("DataSize")
                        .HasColumnType("int")
                        .HasComment("DataSize");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime")
                        .HasComment("LastUpdatedDate");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("UserId");

                    b.ToView("vw_aspnet_Profiles");
                });

            modelBuilder.Entity("App.Domain.Entities.Features.VwAspnetRole", b =>
                {
                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("ApplicationId");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Description");

                    b.Property<string>("LoweredRoleName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("LoweredRoleName");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("RoleId");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("RoleName");

                    b.ToView("vw_aspnet_Roles");
                });

            modelBuilder.Entity("App.Domain.Entities.Features.VwAspnetUser", b =>
                {
                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("ApplicationId");

                    b.Property<bool>("IsAnonymous")
                        .HasColumnType("bit")
                        .HasComment("IsAnonymous");

                    b.Property<DateTime>("LastActivityDate")
                        .HasColumnType("datetime")
                        .HasComment("LastActivityDate");

                    b.Property<string>("LoweredUserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("LoweredUserName");

                    b.Property<string>("MobileAlias")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasComment("MobileAlias");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("UserId");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("UserName");

                    b.ToView("vw_aspnet_Users");
                });

            modelBuilder.Entity("App.Domain.Entities.Features.VwAspnetUsersInRole", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("RoleId");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("UserId");

                    b.ToView("vw_aspnet_UsersInRoles");
                });

            modelBuilder.Entity("App.Domain.Entities.Features.VwAspnetWebPartStatePath", b =>
                {
                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("ApplicationId");

                    b.Property<string>("LoweredPath")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("LoweredPath");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Path");

                    b.Property<Guid>("PathId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("PathId");

                    b.ToView("vw_aspnet_WebPartState_Paths");
                });

            modelBuilder.Entity("App.Domain.Entities.Features.VwAspnetWebPartStateShared", b =>
                {
                    b.Property<int?>("DataSize")
                        .HasColumnType("int")
                        .HasComment("DataSize");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime")
                        .HasComment("LastUpdatedDate");

                    b.Property<Guid>("PathId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("PathId");

                    b.ToView("vw_aspnet_WebPartState_Shared");
                });

            modelBuilder.Entity("App.Domain.Entities.Features.VwAspnetWebPartStateUser", b =>
                {
                    b.Property<int?>("DataSize")
                        .HasColumnType("int")
                        .HasComment("DataSize");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime")
                        .HasComment("LastUpdatedDate");

                    b.Property<Guid?>("PathId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("PathId");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("UserId");

                    b.ToView("vw_aspnet_WebPartState_User");
                });

            modelBuilder.Entity("App.Domain.Entities.Features.VwCampaignMember", b =>
                {
                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasComment("AreaId");

                    b.Property<string>("AreaName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("AreaName");

                    b.Property<string>("CampaignCategoryCd")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("CampaignCategoryCd");

                    b.Property<DateTime?>("CampaignDateEnd")
                        .HasColumnType("datetime")
                        .HasComment("CampaignDateEnd");

                    b.Property<DateTime>("CampaignDateStart")
                        .HasColumnType("datetime")
                        .HasComment("CampaignDateStart");

                    b.Property<Guid>("CampaignId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("CampaignId");

                    b.Property<int>("CampaignNo")
                        .HasColumnType("int")
                        .HasComment("CampaignNo");

                    b.Property<string>("CampaignStatusCd")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("CampaignStatusCd");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Comment");

                    b.Property<string>("ContactCellPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("ContactCellPhone");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime")
                        .HasComment("DateCreate");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength()
                        .HasComment("Gender");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int")
                        .HasComment("GroupId");

                    b.Property<int?>("GroupMeetingCount")
                        .HasColumnType("int")
                        .HasComment("GroupMeetingCount");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("GroupName");

                    b.Property<int?>("GroupTypeId")
                        .HasColumnType("int")
                        .HasComment("GroupTypeId");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasComment("Id");

                    b.Property<string>("Identifier")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasComment("Identifier");

                    b.Property<string>("Idnumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("IDNumber")
                        .HasComment("Idnumber");

                    b.Property<string>("Introducer")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Introducer");

                    b.Property<bool>("IsHasCommitment")
                        .HasColumnType("bit")
                        .HasComment("IsHasCommitment");

                    b.Property<bool?>("IsRollCall")
                        .HasColumnType("bit")
                        .HasComment("IsRollCall");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Name");

                    b.Property<string>("StatusCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("StatusCd");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("UserId");

                    b.Property<int?>("WorshipCount")
                        .HasColumnType("int")
                        .HasComment("WorshipCount");

                    b.Property<int?>("ZoneId")
                        .HasColumnType("int")
                        .HasComment("ZoneId");

                    b.Property<string>("ZoneName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("ZoneName");

                    b.ToView("vw_CampaignMember");
                });

            modelBuilder.Entity("App.Domain.Entities.Features.VwCheckInMemberClass", b =>
                {
                    b.Property<int?>("Age")
                        .HasColumnType("int")
                        .HasComment("Age");

                    b.Property<string>("Area")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Area");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime")
                        .HasComment("Birthday");

                    b.Property<int>("ClassId")
                        .HasColumnType("int")
                        .HasComment("ClassId");

                    b.Property<bool>("ClassWorkDone")
                        .HasColumnType("bit")
                        .HasComment("ClassWorkDone");

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Comment");

                    b.Property<string>("ContactCellPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("ContactCellPhone");

                    b.Property<string>("ContactPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("ContactPhone");

                    b.Property<decimal>("Credit")
                        .HasColumnType("decimal(4,1)")
                        .HasComment("Credit");

                    b.Property<decimal>("CreditEarn")
                        .HasColumnType("decimal(4,1)")
                        .HasComment("CreditEarn");

                    b.Property<string>("Department")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Department");

                    b.Property<string>("Gender")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength()
                        .HasComment("Gender");

                    b.Property<int>("Grade")
                        .HasColumnType("int")
                        .HasComment("Grade");

                    b.Property<string>("Group")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Group");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasComment("Id");

                    b.Property<string>("Identifier")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasComment("Identifier");

                    b.Property<string>("Idnumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("IDNumber")
                        .HasComment("Idnumber");

                    b.Property<bool?>("IsBaptize")
                        .HasColumnType("bit")
                        .HasComment("IsBaptize");

                    b.Property<bool?>("IsContract")
                        .HasColumnType("bit")
                        .HasComment("IsContract");

                    b.Property<int?>("Line")
                        .HasColumnType("int")
                        .HasComment("Line");

                    b.Property<int?>("MemberBaseNo")
                        .HasColumnType("int")
                        .HasComment("MemberBaseNo");

                    b.Property<string>("MemberClassTime1")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasComment("MemberClassTime1");

                    b.Property<string>("MemberClassTime2")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasComment("MemberClassTime2");

                    b.Property<string>("MemberClassTime3")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasComment("MemberClassTime3");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasComment("MemberId");

                    b.Property<string>("MemberName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("MemberName");

                    b.Property<string>("OrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("OrgName");

                    b.Property<int?>("Position")
                        .HasColumnType("int")
                        .HasComment("Position");

                    b.Property<decimal?>("Price")
                        .HasColumnType("money")
                        .HasComment("Price");

                    b.Property<DateTime?>("SelectedClassStartDate")
                        .HasColumnType("datetime")
                        .HasComment("SelectedClassStartDate");

                    b.Property<string>("SelectedClassTime")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasComment("SelectedClassTime");

                    b.Property<int?>("SelectedTimeId")
                        .HasColumnType("int")
                        .HasComment("SelectedTimeId");

                    b.Property<string>("Specials")
                        .HasColumnType("ntext")
                        .HasComment("Specials");

                    b.Property<string>("StatusCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("StatusCd");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Team");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("money")
                        .HasComment("TotalAmount");

                    b.Property<string>("Zone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Zone");

                    b.ToView("vw_CheckInMemberClass");
                });

            modelBuilder.Entity("App.Domain.Entities.Features.VwExpGroup", b =>
                {
                    b.Property<string>("AreaName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("AreaName");

                    b.Property<int?>("GroupCount")
                        .HasColumnType("int")
                        .HasComment("GroupCount");

                    b.Property<int?>("Type2Count")
                        .HasColumnType("int")
                        .HasComment("Type2Count");

                    b.Property<int?>("Type2MemCount")
                        .HasColumnType("int")
                        .HasComment("Type2MemCount");

                    b.Property<int?>("Type2MemScount")
                        .HasColumnType("int")
                        .HasColumnName("Type2MemSCount")
                        .HasComment("Type2MemScount");

                    b.Property<int?>("Type2Scount")
                        .HasColumnType("int")
                        .HasColumnName("Type2SCount")
                        .HasComment("Type2Scount");

                    b.Property<int?>("Type3Count")
                        .HasColumnType("int")
                        .HasComment("Type3Count");

                    b.Property<int?>("Type3MemCount")
                        .HasColumnType("int")
                        .HasComment("Type3MemCount");

                    b.Property<int?>("Type3MemScount")
                        .HasColumnType("int")
                        .HasColumnName("Type3MemSCount")
                        .HasComment("Type3MemScount");

                    b.Property<int?>("Type3Scount")
                        .HasColumnType("int")
                        .HasColumnName("Type3SCount")
                        .HasComment("Type3Scount");

                    b.ToView("vw_ExpGroup");
                });

            modelBuilder.Entity("App.Domain.Entities.Features.VwGroup", b =>
                {
                    b.Property<int>("AreaId")
                        .HasColumnType("int")
                        .HasComment("AreaId");

                    b.Property<string>("AreaName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("AreaName");

                    b.Property<int>("DepId")
                        .HasColumnType("int")
                        .HasComment("DepId");

                    b.Property<string>("DepName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("DepName");

                    b.Property<int?>("GroupAge2030")
                        .HasColumnType("int")
                        .HasComment("GroupAge2030");

                    b.Property<int?>("GroupAge20Bellow")
                        .HasColumnType("int")
                        .HasComment("GroupAge20Bellow");

                    b.Property<int?>("GroupAge3040")
                        .HasColumnType("int")
                        .HasComment("GroupAge3040");

                    b.Property<int?>("GroupAge4050")
                        .HasColumnType("int")
                        .HasComment("GroupAge4050");

                    b.Property<int?>("GroupAge50Above")
                        .HasColumnType("int")
                        .HasComment("GroupAge50Above");

                    b.Property<string>("GroupLeaderName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("GroupLeaderName");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasComment("Id");

                    b.Property<bool>("IsExp")
                        .HasColumnType("bit")
                        .HasComment("IsExp");

                    b.Property<bool>("IsSearchable")
                        .HasColumnType("bit")
                        .HasComment("IsSearchable");

                    b.Property<int?>("LeaderId")
                        .HasColumnType("int")
                        .HasComment("LeaderId");

                    b.Property<string>("MeetingAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("MeetingAddress");

                    b.Property<int>("MeetingDayOfWeek")
                        .HasColumnType("int")
                        .HasComment("MeetingDayOfWeek");

                    b.Property<string>("MeetingTime")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("MeetingTime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Name");

                    b.Property<int>("OrgId")
                        .HasColumnType("int")
                        .HasComment("OrgId");

                    b.Property<string>("OrgName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("OrgName");

                    b.Property<string>("StatusCd")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("StatusCd");

                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasComment("TypeId");

                    b.Property<int>("ZoneId")
                        .HasColumnType("int")
                        .HasComment("ZoneId");

                    b.Property<string>("ZoneName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("ZoneName");

                    b.ToView("vw_Group");
                });

            modelBuilder.Entity("App.Domain.Entities.Features.VwMeetingMember", b =>
                {
                    b.Property<int>("AreaId")
                        .HasColumnType("int")
                        .HasComment("AreaId");

                    b.Property<string>("AreaName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("AreaName");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Comment");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasComment("Date");

                    b.Property<int>("DepId")
                        .HasColumnType("int")
                        .HasComment("DepId");

                    b.Property<int>("GroupId")
                        .HasColumnType("int")
                        .HasComment("GroupId");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("GroupName");

                    b.Property<int>("GroupTypeId")
                        .HasColumnType("int")
                        .HasComment("GroupTypeId");

                    b.Property<int>("IntField1")
                        .HasColumnType("int")
                        .HasComment("IntField1");

                    b.Property<int>("IntField2")
                        .HasColumnType("int")
                        .HasComment("IntField2");

                    b.Property<int>("IntField3")
                        .HasColumnType("int")
                        .HasComment("IntField3");

                    b.Property<bool>("IsAttended")
                        .HasColumnType("bit")
                        .HasComment("IsAttended");

                    b.Property<bool>("IsGroupAttendExpected")
                        .HasColumnType("bit")
                        .HasComment("IsGroupAttendExpected");

                    b.Property<bool>("IsVisit")
                        .HasColumnType("bit")
                        .HasComment("IsVisit");

                    b.Property<bool>("IsWorshipAttendExpected")
                        .HasColumnType("bit")
                        .HasComment("IsWorshipAttendExpected");

                    b.Property<bool>("IsWorshipAttended")
                        .HasColumnType("bit")
                        .HasComment("IsWorshipAttended");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasComment("MemberId");

                    b.Property<string>("MemberName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("MemberName");

                    b.Property<string>("MemberRoles")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("MemberRoles");

                    b.Property<string>("MemberStatusCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("MemberStatusCd");

                    b.Property<int>("OrgId")
                        .HasColumnType("int")
                        .HasComment("OrgId");

                    b.Property<int?>("RecentGroupAbsenceCount")
                        .HasColumnType("int")
                        .HasComment("RecentGroupAbsenceCount");

                    b.Property<int?>("RecentWorshipAbsenceCount")
                        .HasColumnType("int")
                        .HasComment("RecentWorshipAbsenceCount");

                    b.Property<long?>("WeekTh")
                        .HasColumnType("bigint")
                        .HasComment("WeekTh");

                    b.Property<int>("ZoneId")
                        .HasColumnType("int")
                        .HasComment("ZoneId");

                    b.Property<string>("ZoneName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("ZoneName");

                    b.ToView("vw_MeetingMember");
                });

            modelBuilder.Entity("App.Domain.Entities.Features.VwMemberClass", b =>
                {
                    b.Property<string>("Area")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Area");

                    b.Property<string>("BaptizeOrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("BaptizeOrgName");

                    b.Property<int?>("BaptizeTypeId")
                        .HasColumnType("int")
                        .HasComment("BaptizeTypeId");

                    b.Property<DateTime?>("Baptizeday")
                        .HasColumnType("datetime")
                        .HasComment("Baptizeday");

                    b.Property<int>("BaseNo")
                        .HasColumnType("int")
                        .HasComment("BaseNo");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime")
                        .HasComment("Birthday");

                    b.Property<string>("CategoryCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("CategoryCode");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasComment("CategoryId");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("CategoryName");

                    b.Property<int>("ClassId")
                        .HasColumnType("int")
                        .HasComment("ClassId");

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Comment");

                    b.Property<string>("ContactAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("ContactAddress");

                    b.Property<string>("ContactCellPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("ContactCellPhone");

                    b.Property<string>("ContactPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("ContactPhone");

                    b.Property<string>("ContactZipCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasComment("ContactZipCode");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime")
                        .HasComment("DateCreate");

                    b.Property<DateTime?>("DateRecorded")
                        .HasColumnType("datetime")
                        .HasComment("DateRecorded");

                    b.Property<DateTime?>("DateTextbook")
                        .HasColumnType("datetime")
                        .HasComment("DateTextbook");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime")
                        .HasComment("DateUpdate");

                    b.Property<string>("Department")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Department");

                    b.Property<string>("EducationSchool")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("EducationSchool");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Email");

                    b.Property<string>("EmgPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("EmgPhone");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength()
                        .HasComment("Gender");

                    b.Property<string>("Group")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Group");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasComment("Id");

                    b.Property<string>("Identifier")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasComment("Identifier");

                    b.Property<string>("Idnumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("IDNumber")
                        .HasComment("Idnumber");

                    b.Property<string>("Introducer")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Introducer");

                    b.Property<string>("IntroducerGroup")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("IntroducerGroup");

                    b.Property<bool?>("IsBaptize")
                        .HasColumnType("bit")
                        .HasComment("IsBaptize");

                    b.Property<bool>("IsContract")
                        .HasColumnType("bit")
                        .HasComment("IsContract");

                    b.Property<bool?>("IsCouple")
                        .HasColumnType("bit")
                        .HasComment("IsCouple");

                    b.Property<bool?>("IsNeedTraffic")
                        .HasColumnType("bit")
                        .HasComment("IsNeedTraffic");

                    b.Property<string>("LessionCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("LessionCode");

                    b.Property<int>("LessionId")
                        .HasColumnType("int")
                        .HasComment("LessionId");

                    b.Property<string>("LessionName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("LessionName");

                    b.Property<int>("LessionNo")
                        .HasColumnType("int")
                        .HasComment("LessionNo");

                    b.Property<int?>("Line")
                        .HasColumnType("int")
                        .HasComment("Line");

                    b.Property<string>("Mates")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("Mates");

                    b.Property<int?>("MemberBaseNo")
                        .HasColumnType("int")
                        .HasComment("MemberBaseNo");

                    b.Property<string>("MemberClassTime1")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasComment("MemberClassTime1");

                    b.Property<string>("MemberClassTime2")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasComment("MemberClassTime2");

                    b.Property<string>("MemberClassTime3")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasComment("MemberClassTime3");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasComment("MemberId");

                    b.Property<string>("MemberName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("MemberName");

                    b.Property<string>("MemberStatusCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("MemberStatusCd");

                    b.Property<string>("MemberUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("MemberUserName");

                    b.Property<string>("OrderComment")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("OrderComment");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasComment("OrderId");

                    b.Property<string>("OrderIdentifer")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasComment("OrderIdentifer");

                    b.Property<string>("OrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("OrgName");

                    b.Property<string>("OrgPriest")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("OrgPriest");

                    b.Property<string>("OrgTitle")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("OrgTitle");

                    b.Property<int?>("Position")
                        .HasColumnType("int")
                        .HasComment("Position");

                    b.Property<decimal?>("Price")
                        .HasColumnType("money")
                        .HasComment("Price");

                    b.Property<string>("PriceName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("PriceName");

                    b.Property<DateTime?>("ReceptionDate")
                        .HasColumnType("datetime")
                        .HasComment("ReceptionDate");

                    b.Property<string>("RecordStatusCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("RecordStatusCd");

                    b.Property<string>("RelativeCellPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("RelativeCellPhone");

                    b.Property<string>("RelativeName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("RelativeName");

                    b.Property<string>("RelativeRelation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("RelativeRelation");

                    b.Property<decimal?>("RemainingAmount")
                        .HasColumnType("money")
                        .HasComment("RemainingAmount");

                    b.Property<DateTime?>("RemainingPayedDate")
                        .HasColumnType("datetime")
                        .HasComment("RemainingPayedDate");

                    b.Property<string>("RemainingPayee")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("RemainingPayee");

                    b.Property<DateTime?>("SelectedClassStartDate")
                        .HasColumnType("datetime")
                        .HasComment("SelectedClassStartDate");

                    b.Property<string>("SelectedClassTime")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasComment("SelectedClassTime");

                    b.Property<int?>("SelectedTimeId")
                        .HasColumnType("int")
                        .HasComment("SelectedTimeId");

                    b.Property<string>("Specials")
                        .HasColumnType("ntext")
                        .HasComment("Specials");

                    b.Property<string>("Spouse")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Spouse");

                    b.Property<string>("StatusCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("StatusCd");

                    b.Property<string>("StudentCd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("StudentCd");

                    b.Property<int?>("StudentGrade")
                        .HasColumnType("int")
                        .HasComment("StudentGrade");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Team");

                    b.Property<string>("TextbookName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("TextbookName");

                    b.Property<int?>("TranslateId")
                        .HasColumnType("int")
                        .HasComment("TranslateId");

                    b.Property<string>("UserCreate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserCreate");

                    b.Property<string>("UserUpdate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserUpdate");

                    b.Property<string>("Zone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Zone");

                    b.ToView("vw_MemberClass");
                });

            modelBuilder.Entity("App.Domain.Entities.Features.VwMemberClassDay", b =>
                {
                    b.Property<int?>("Age")
                        .HasColumnType("int")
                        .HasComment("Age");

                    b.Property<string>("Area")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Area");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime")
                        .HasComment("Birthday");

                    b.Property<bool>("CheckIn")
                        .HasColumnType("bit")
                        .HasComment("CheckIn");

                    b.Property<DateTime?>("CheckInDate")
                        .HasColumnType("datetime")
                        .HasComment("CheckInDate");

                    b.Property<DateTime>("ClassDate")
                        .HasColumnType("datetime")
                        .HasComment("ClassDate");

                    b.Property<int>("ClassDayId")
                        .HasColumnType("int")
                        .HasComment("ClassDayId");

                    b.Property<int>("ClassTimeId")
                        .HasColumnType("int")
                        .HasComment("ClassTimeId");

                    b.Property<string>("ContactCellPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("ContactCellPhone");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime")
                        .HasComment("EndTime");

                    b.Property<string>("Group")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Group");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasComment("Id");

                    b.Property<string>("Identifier")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasComment("Identifier");

                    b.Property<string>("Idnumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("IDNumber")
                        .HasComment("Idnumber");

                    b.Property<int?>("Line")
                        .HasColumnType("int")
                        .HasComment("Line");

                    b.Property<int>("MemberClassId")
                        .HasColumnType("int")
                        .HasComment("MemberClassId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Name");

                    b.Property<int?>("Position")
                        .HasColumnType("int")
                        .HasComment("Position");

                    b.Property<string>("Specials")
                        .HasColumnType("ntext")
                        .HasComment("Specials");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime")
                        .HasComment("StartTime");

                    b.Property<string>("StatusCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("StatusCd");

                    b.Property<string>("Zone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Zone");

                    b.ToView("vw_MemberClassDay");
                });

            modelBuilder.Entity("App.Domain.Entities.Features.VwMemberMinister", b =>
                {
                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasComment("AreaId");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int")
                        .HasComment("GroupId");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasComment("Id");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int")
                        .HasComment("MemberId");

                    b.Property<string>("MemberName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("MemberName");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Name");

                    b.Property<int?>("ZoneId")
                        .HasColumnType("int")
                        .HasComment("ZoneId");

                    b.ToView("vw_MemberMinister");
                });

            modelBuilder.Entity("App.Domain.Entities.Features.VwMemberSummary", b =>
                {
                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasComment("AreaId");

                    b.Property<int?>("AreaLeader2Id")
                        .HasColumnType("int")
                        .HasComment("AreaLeader2Id");

                    b.Property<int?>("AreaLeader3Id")
                        .HasColumnType("int")
                        .HasComment("AreaLeader3Id");

                    b.Property<int?>("AreaLeaderId")
                        .HasColumnType("int")
                        .HasComment("AreaLeaderId");

                    b.Property<string>("AreaName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("AreaName");

                    b.Property<int?>("AreaSupervisorId")
                        .HasColumnType("int")
                        .HasComment("AreaSupervisorId");

                    b.Property<string>("BaptizeName")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasComment("BaptizeName");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime")
                        .HasComment("Birthday");

                    b.Property<string>("ContactAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("ContactAddress");

                    b.Property<string>("ContactCellPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("ContactCellPhone");

                    b.Property<string>("ContactCity")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("ContactCity");

                    b.Property<string>("ContactPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("ContactPhone");

                    b.Property<string>("ContactZipCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasComment("ContactZipCode");

                    b.Property<int?>("DepId")
                        .HasColumnType("int")
                        .HasComment("DepId");

                    b.Property<int?>("DepLeader2Id")
                        .HasColumnType("int")
                        .HasComment("DepLeader2Id");

                    b.Property<int?>("DepLeaderId")
                        .HasColumnType("int")
                        .HasComment("DepLeaderId");

                    b.Property<string>("DepName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("DepName");

                    b.Property<int?>("E1")
                        .HasColumnType("int")
                        .HasComment("E1");

                    b.Property<int?>("E2")
                        .HasColumnType("int")
                        .HasComment("E2");

                    b.Property<int?>("E3")
                        .HasColumnType("int")
                        .HasComment("E3");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Email");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasComment("Gender");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int")
                        .HasComment("GroupId");

                    b.Property<int?>("GroupLeader2Id")
                        .HasColumnType("int")
                        .HasComment("GroupLeader2Id");

                    b.Property<int?>("GroupLeader3Id")
                        .HasColumnType("int")
                        .HasComment("GroupLeader3Id");

                    b.Property<int?>("GroupLeaderId")
                        .HasColumnType("int")
                        .HasComment("GroupLeaderId");

                    b.Property<string>("GroupName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("GroupName");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasComment("Id");

                    b.Property<string>("Identifier")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasComment("Identifier");

                    b.Property<string>("Idnumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("IDNumber")
                        .HasComment("Idnumber");

                    b.Property<bool>("IsAllowLession")
                        .HasColumnType("bit")
                        .HasComment("IsAllowLession");

                    b.Property<bool>("IsHasCommitment")
                        .HasColumnType("bit")
                        .HasComment("IsHasCommitment");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Name");

                    b.Property<string>("OrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("OrgName");

                    b.Property<int?>("OrganizationId")
                        .HasColumnType("int")
                        .HasComment("OrganizationId");

                    b.Property<int?>("PastorId")
                        .HasColumnType("int")
                        .HasComment("PastorId");

                    b.Property<string>("SourceName")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasComment("SourceName");

                    b.Property<string>("StatusCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("StatusCd");

                    b.Property<string>("StatusName")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasComment("StatusName");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("UserId");

                    b.Property<int?>("ZoneId")
                        .HasColumnType("int")
                        .HasComment("ZoneId");

                    b.Property<int?>("ZoneLeader2Id")
                        .HasColumnType("int")
                        .HasComment("ZoneLeader2Id");

                    b.Property<int?>("ZoneLeader3Id")
                        .HasColumnType("int")
                        .HasComment("ZoneLeader3Id");

                    b.Property<int?>("ZoneLeaderId")
                        .HasColumnType("int")
                        .HasComment("ZoneLeaderId");

                    b.Property<string>("ZoneName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("ZoneName");

                    b.Property<int?>("ZoneSupervisorId")
                        .HasColumnType("int")
                        .HasComment("ZoneSupervisorId");

                    b.Property<int?>("成長")
                        .HasColumnType("int")
                        .HasComment("成長");

                    b.Property<int?>("門徒")
                        .HasColumnType("int")
                        .HasComment("門徒");

                    b.Property<int?>("領袖")
                        .HasColumnType("int")
                        .HasComment("領袖");

                    b.ToView("vw_MemberSummary");
                });

            modelBuilder.Entity("App.Domain.Entities.Features.VwMemberTag", b =>
                {
                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasComment("MemberId");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasComment("Name");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int")
                        .HasComment("SortOrder");

                    b.Property<Guid>("TagId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("TagId");

                    b.Property<string>("TagModule")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("TagModule");

                    b.ToView("vw_MemberTag");
                });

            modelBuilder.Entity("App.Domain.Entities.Features.VwOrderInvoice", b =>
                {
                    b.Property<decimal>("Amount")
                        .HasColumnType("money")
                        .HasComment("Amount");

                    b.Property<string>("CategoryName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("CategoryName");

                    b.Property<int?>("ClassId")
                        .HasColumnType("int")
                        .HasComment("ClassId");

                    b.Property<int>("ClassOrgId")
                        .HasColumnType("int")
                        .HasComment("ClassOrgId");

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Comment");

                    b.Property<string>("ContactCellPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("ContactCellPhone");

                    b.Property<string>("ContactPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("ContactPhone");

                    b.Property<string>("CustomNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("CustomNo");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime")
                        .HasComment("DateCreate");

                    b.Property<DateTime?>("DateRecorded")
                        .HasColumnType("datetime")
                        .HasComment("DateRecorded");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasComment("Id");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasComment("Identifier");

                    b.Property<string>("Idnumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("IDNumber")
                        .HasComment("Idnumber");

                    b.Property<int?>("LessionId")
                        .HasColumnType("int")
                        .HasComment("LessionId");

                    b.Property<string>("LessionName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("LessionName");

                    b.Property<int?>("LessionNo")
                        .HasColumnType("int")
                        .HasComment("LessionNo");

                    b.Property<int?>("MemberClassId")
                        .HasColumnType("int")
                        .HasComment("MemberClassId");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int")
                        .HasComment("MemberId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Name");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasComment("OrderId");

                    b.Property<string>("OrderIdentifer")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasComment("OrderIdentifer");

                    b.Property<int>("OrderTypeId")
                        .HasColumnType("int")
                        .HasComment("OrderTypeId");

                    b.Property<int>("OrgId")
                        .HasColumnType("int")
                        .HasComment("OrgId");

                    b.Property<string>("Payee")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Payee");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("PaymentMethod");

                    b.Property<string>("PriceName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("PriceName");

                    b.Property<string>("RecordStatusCd")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("RecordStatusCd");

                    b.Property<string>("StatusCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("StatusCd");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("money")
                        .HasComment("TotalAmount");

                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasComment("TypeId");

                    b.Property<string>("UserRecorded")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("UserRecorded");

                    b.ToView("vw_OrderInvoice");
                });

            modelBuilder.Entity("App.Domain.Entities.Features.VwOrderRecord", b =>
                {
                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("CategoryName");

                    b.Property<int>("ClassId")
                        .HasColumnType("int")
                        .HasComment("ClassId");

                    b.Property<DateTime?>("DateRecorded")
                        .HasColumnType("datetime")
                        .HasComment("DateRecorded");

                    b.Property<decimal?>("DepositAmount")
                        .HasColumnType("money")
                        .HasComment("DepositAmount");

                    b.Property<DateTime?>("DepositPayedDate")
                        .HasColumnType("datetime")
                        .HasComment("DepositPayedDate");

                    b.Property<string>("DepositPayee")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("DepositPayee");

                    b.Property<int>("LessionId")
                        .HasColumnType("int")
                        .HasComment("LessionId");

                    b.Property<string>("LessionName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("LessionName");

                    b.Property<int>("LessionNo")
                        .HasColumnType("int")
                        .HasComment("LessionNo");

                    b.Property<int>("MemberClassId")
                        .HasColumnType("int")
                        .HasComment("MemberClassId");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasComment("MemberId");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Name");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasComment("OrderId");

                    b.Property<string>("OrderIdentifer")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasComment("OrderIdentifer");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasComment("OrgId");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("PaymentMethod");

                    b.Property<decimal?>("Price")
                        .HasColumnType("money")
                        .HasComment("Price");

                    b.Property<string>("PriceName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("PriceName");

                    b.Property<string>("RecordStatusCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("RecordStatusCd");

                    b.Property<decimal?>("RemainingAmount")
                        .HasColumnType("money")
                        .HasComment("RemainingAmount");

                    b.Property<DateTime?>("RemainingPayedDate")
                        .HasColumnType("datetime")
                        .HasComment("RemainingPayedDate");

                    b.Property<string>("RemainingPayee")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("RemainingPayee");

                    b.Property<int?>("SelectedTimeId")
                        .HasColumnType("int")
                        .HasComment("SelectedTimeId");

                    b.Property<string>("StatusCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("StatusCd");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("money")
                        .HasComment("TotalAmount");

                    b.ToView("vw_OrderRecord");
                });

            modelBuilder.Entity("App.Domain.Entities.Features.VwPreOrder", b =>
                {
                    b.Property<int>("AreaId")
                        .HasColumnType("int")
                        .HasComment("AreaId");

                    b.Property<int?>("AreaLeaderId")
                        .HasColumnType("int")
                        .HasComment("AreaLeaderId");

                    b.Property<string>("AreaName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("AreaName");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("CategoryName");

                    b.Property<int>("ClassId")
                        .HasColumnType("int")
                        .HasComment("ClassId");

                    b.Property<DateTime>("ClassStartDate")
                        .HasColumnType("datetime")
                        .HasComment("ClassStartDate");

                    b.Property<int>("ClassTime1")
                        .HasColumnType("int")
                        .HasComment("ClassTime1");

                    b.Property<int?>("ClassTime2")
                        .HasColumnType("int")
                        .HasComment("ClassTime2");

                    b.Property<int?>("ClassTime3")
                        .HasColumnType("int")
                        .HasComment("ClassTime3");

                    b.Property<string>("ContactCellPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("ContactCellPhone");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime")
                        .HasComment("DateCreate");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int")
                        .HasComment("GroupId");

                    b.Property<int?>("GroupLeaderId")
                        .HasColumnType("int")
                        .HasComment("GroupLeaderId");

                    b.Property<string>("GroupName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("GroupName");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasComment("Id");

                    b.Property<string>("Identifer")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasComment("Identifer");

                    b.Property<string>("Idnumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("IDNumber")
                        .HasComment("Idnumber");

                    b.Property<string>("Introducer")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Introducer");

                    b.Property<string>("IntroducerGroup")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("IntroducerGroup");

                    b.Property<bool?>("IsAllowLession")
                        .HasColumnType("bit")
                        .HasComment("IsAllowLession");

                    b.Property<bool>("IsRequireAllowLession")
                        .HasColumnType("bit")
                        .HasComment("IsRequireAllowLession");

                    b.Property<string>("LessionName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("LessionName");

                    b.Property<int>("LessionNo")
                        .HasColumnType("int")
                        .HasComment("LessionNo");

                    b.Property<bool>("MemberIsAllowLession")
                        .HasColumnType("bit")
                        .HasComment("MemberIsAllowLession");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Name");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasComment("OrderId");

                    b.Property<DateTime>("SignUpDueDate")
                        .HasColumnType("datetime")
                        .HasComment("SignUpDueDate");

                    b.Property<string>("StatusCd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("StatusCd");

                    b.Property<int>("ZoneId")
                        .HasColumnType("int")
                        .HasComment("ZoneId");

                    b.Property<int?>("ZoneLeaderId")
                        .HasColumnType("int")
                        .HasComment("ZoneLeaderId");

                    b.Property<string>("ZoneName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("ZoneName");

                    b.ToView("vw_PreOrder");
                });

            modelBuilder.Entity("App.Domain.Entities.Features.VwRollCall", b =>
                {
                    b.Property<int?>("ActivityId")
                        .HasColumnType("int")
                        .HasComment("ActivityId");

                    b.Property<int?>("ActivityWorkId")
                        .HasColumnType("int")
                        .HasComment("ActivityWorkId");

                    b.Property<int>("AreaId")
                        .HasColumnType("int")
                        .HasComment("AreaId");

                    b.Property<string>("AreaName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("AreaName");

                    b.Property<Guid?>("CampaignId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("CampaignId");

                    b.Property<int?>("CampaignSpdayId")
                        .HasColumnType("int")
                        .HasComment("CampaignSpdayId");

                    b.Property<string>("ContactCellPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("ContactCellPhone");

                    b.Property<int>("DepId")
                        .HasColumnType("int")
                        .HasComment("DepId");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength()
                        .HasComment("Gender");

                    b.Property<DateTime?>("GrantedDate")
                        .HasColumnType("datetime")
                        .HasComment("GrantedDate");

                    b.Property<int>("GroupId")
                        .HasColumnType("int")
                        .HasComment("GroupId");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("GroupName");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasComment("Id");

                    b.Property<int>("IntField1")
                        .HasColumnType("int")
                        .HasComment("IntField1");

                    b.Property<int>("IntField2")
                        .HasColumnType("int")
                        .HasComment("IntField2");

                    b.Property<int>("IntField3")
                        .HasColumnType("int")
                        .HasComment("IntField3");

                    b.Property<int>("IntField4")
                        .HasColumnType("int")
                        .HasComment("IntField4");

                    b.Property<int>("IntField5")
                        .HasColumnType("int")
                        .HasComment("IntField5");

                    b.Property<bool>("IsAttend")
                        .HasColumnType("bit")
                        .HasComment("IsAttend");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasComment("MemberId");

                    b.Property<string>("MemberIdentifier")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasComment("MemberIdentifier");

                    b.Property<string>("MemberIdnumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("MemberIDNumber")
                        .HasComment("MemberIdnumber");

                    b.Property<bool>("MemberIsUser")
                        .HasColumnType("bit")
                        .HasComment("MemberIsUser");

                    b.Property<string>("MemberName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("MemberName");

                    b.Property<string>("No")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasComment("No");

                    b.Property<int>("OrgId")
                        .HasColumnType("int")
                        .HasComment("OrgId");

                    b.Property<DateTime>("RollCallDate")
                        .HasColumnType("datetime")
                        .HasComment("RollCallDate");

                    b.Property<int>("RollCallTypeId")
                        .HasColumnType("int")
                        .HasComment("RollCallTypeId");

                    b.Property<int>("ZoneId")
                        .HasColumnType("int")
                        .HasComment("ZoneId");

                    b.Property<string>("ZoneName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("ZoneName");

                    b.ToView("vw_RollCall");
                });

            modelBuilder.Entity("App.Domain.Entities.Features.VwWorkSignup", b =>
                {
                    b.Property<int>("ActivityId")
                        .HasColumnType("int")
                        .HasComment("ActivityId");

                    b.Property<string>("ActivityName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("ActivityName");

                    b.Property<int?>("Age")
                        .HasColumnType("int")
                        .HasComment("Age");

                    b.Property<int>("AreaId")
                        .HasColumnType("int")
                        .HasComment("AreaId");

                    b.Property<int?>("AreaLeader2Id")
                        .HasColumnType("int")
                        .HasComment("AreaLeader2Id");

                    b.Property<int?>("AreaLeader3Id")
                        .HasColumnType("int")
                        .HasComment("AreaLeader3Id");

                    b.Property<int?>("AreaLeaderId")
                        .HasColumnType("int")
                        .HasComment("AreaLeaderId");

                    b.Property<string>("AreaName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("AreaName");

                    b.Property<int?>("AreaSupervisorId")
                        .HasColumnType("int")
                        .HasComment("AreaSupervisorId");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime")
                        .HasComment("Birthday");

                    b.Property<string>("ContactCellPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("ContactCellPhone");

                    b.Property<int>("FemaleWanted")
                        .HasColumnType("int")
                        .HasComment("FemaleWanted");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength()
                        .HasComment("Gender");

                    b.Property<int>("GroupId")
                        .HasColumnType("int")
                        .HasComment("GroupId");

                    b.Property<int?>("GroupLeader2Id")
                        .HasColumnType("int")
                        .HasComment("GroupLeader2Id");

                    b.Property<int?>("GroupLeader3Id")
                        .HasColumnType("int")
                        .HasComment("GroupLeader3Id");

                    b.Property<int?>("GroupLeaderId")
                        .HasColumnType("int")
                        .HasComment("GroupLeaderId");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("GroupName");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasComment("Id");

                    b.Property<string>("Idnumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("IDNumber")
                        .HasComment("Idnumber");

                    b.Property<bool>("IsTeam")
                        .HasColumnType("bit")
                        .HasComment("IsTeam");

                    b.Property<int>("MaleWanted")
                        .HasColumnType("int")
                        .HasComment("MaleWanted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Name");

                    b.Property<int?>("TeamNo")
                        .HasColumnType("int")
                        .HasComment("TeamNo");

                    b.Property<string>("TimeEnd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("TimeEnd");

                    b.Property<string>("TimeStart")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("TimeStart");

                    b.Property<int>("WorkId")
                        .HasColumnType("int")
                        .HasComment("WorkId");

                    b.Property<string>("WorkName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("WorkName");

                    b.Property<int>("ZoneId")
                        .HasColumnType("int")
                        .HasComment("ZoneId");

                    b.Property<int?>("ZoneLeader2Id")
                        .HasColumnType("int")
                        .HasComment("ZoneLeader2Id");

                    b.Property<int?>("ZoneLeader3Id")
                        .HasColumnType("int")
                        .HasComment("ZoneLeader3Id");

                    b.Property<int?>("ZoneLeaderId")
                        .HasColumnType("int")
                        .HasComment("ZoneLeaderId");

                    b.Property<string>("ZoneName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("ZoneName");

                    b.Property<int?>("ZoneSupervisorId")
                        .HasColumnType("int")
                        .HasComment("ZoneSupervisorId");

                    b.ToView("vw_WorkSignup");
                });

            modelBuilder.Entity("App.Domain.Entities.Features.VwZoneSupervisor", b =>
                {
                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasComment("AreaId");

                    b.Property<string>("ContactCellPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("ContactCellPhone");

                    b.Property<string>("ContactPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("ContactPhone");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasComment("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Name");

                    b.Property<int>("ZoneId")
                        .HasColumnType("int")
                        .HasComment("ZoneId");

                    b.Property<string>("ZoneName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("ZoneName");

                    b.ToView("vw_ZoneSupervisor");
                });
#pragma warning restore 612, 618
        }
    }
}
